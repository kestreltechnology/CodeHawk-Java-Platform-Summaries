<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2019-01-18 23:22:43"/>
  <class name="HashMap" package="java.util">
    <superclass>java.util.AbstractMap</superclass>
    <interfaces>
      <implements>java.util.Map</implements>
      <implements>java.lang.Cloneable</implements>
      <implements>java.io.Serializable</implements>
    </interfaces>
    <!-- =============================== FIELDS ===============================  -->
    <fields>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:serialVersionUID -->
      <field access="private" final="yes" name="serialVersionUID" static="yes">
        <signature>
          <long/>
        </signature>
        <value>
          <long value="362498820763181265"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:DEFAULT_INITIAL_CAPACITY -->
      <field access="default" final="yes" name="DEFAULT_INITIAL_CAPACITY" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="16"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:MAXIMUM_CAPACITY -->
      <field access="default" final="yes" name="MAXIMUM_CAPACITY" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="1073741824"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:DEFAULT_LOAD_FACTOR -->
      <field access="default" final="yes" name="DEFAULT_LOAD_FACTOR" static="yes">
        <signature>
          <float/>
        </signature>
        <value>
          <float value="0.750000"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:TREEIFY_THRESHOLD -->
      <field access="default" final="yes" name="TREEIFY_THRESHOLD" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="8"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:UNTREEIFY_THRESHOLD -->
      <field access="default" final="yes" name="UNTREEIFY_THRESHOLD" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="6"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:MIN_TREEIFY_CAPACITY -->
      <field access="default" final="yes" name="MIN_TREEIFY_CAPACITY" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="64"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:table -->
      <field access="default" name="table">
        <signature>
          <array>
            <object>java.util.HashMap$Node</object>
          </array>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:entrySet -->
      <field access="default" name="entrySet">
        <signature>
          <object>java.util.Set</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:size -->
      <field access="default" name="size">
        <signature>
          <int/>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:modCount -->
      <field access="default" name="modCount">
        <signature>
          <int/>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:threshold -->
      <field access="default" name="threshold">
        <signature>
          <int/>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:loadFactor -->
      <field access="default" final="yes" name="loadFactor">
        <signature>
          <float/>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) field:values -->
      <field from="java.util.AbstractMap" inherited="yes" name="values">
        <signature>
          <object>java.util.Collection</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) field:keySet -->
      <field from="java.util.AbstractMap" inherited="yes" name="keySet">
        <signature>
          <object>java.util.Set</object>
        </signature>
      </field>
    </fields>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (int,float) -->
      <constructor access="public" instrs="48" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <float/>
          </arg>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <geq/>
                  <arg nr="1"/>
                  <cn>0</cn>
                </apply>
              </math>
            </safety-condition>
            <safety-condition>
              <math>
                <apply>
                  <gt/>
                  <arg nr="2"/>
                  <cn>0</cn>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary/>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (int) -->
      <constructor access="public" instrs="5" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <geq/>
                  <arg nr="1"/>
                  <cn>0</cn>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.IllegalArgumentException</exn>
          </c-throws>
        </exceptions>
        <summary/>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ () -->
      <constructor access="public" instrs="6">
        <signature/>
        <exceptions/>
        <summary>
	  <time-cost>
	    <cost>
	      <cn>36</cn>
	    </cost>
	  </time-cost>
	</summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.util.Map) -->
      <constructor access="public" instrs="10" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Map</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ afterNodeAccess -->
      <method access="default" instrs="1" name="afterNodeAccess" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.HashMap$Node</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ afterNodeInsertion -->
      <method access="default" instrs="1" name="afterNodeInsertion" valid="no">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ afterNodeRemoval -->
      <method access="default" instrs="1" name="afterNodeRemoval" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.HashMap$Node</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ capacity -->
      <method access="default" final="yes" instrs="15" name="capacity">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <taint>
	    <transfer><this/><return/></transfer>
	  </taint>
	  <time-cost>
	    <cost lb="17" ub="23"/>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ clear -->
      <method access="public" instrs="30" name="clear" valid="no">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ clone -->
      <method access="public" instrs="19" name="clone" valid="no">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ comparableClassFor -->
      <method access="default" instrs="56" name="comparableClassFor" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ compareComparables -->
      <method access="default" instrs="13" name="compareComparables" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="3">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ compute -->
      <method access="public" instrs="165" name="compute" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.util.function.BiFunction</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ computeIfAbsent -->
      <method access="public" instrs="161" name="computeIfAbsent" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.util.function.Function</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ computeIfPresent -->
      <method access="public" instrs="46" name="computeIfPresent" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.util.function.BiFunction</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ containsKey -->
      <method access="public" instrs="10" name="containsKey" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ClassCastException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ containsValue -->
      <method access="public" instrs="42" name="containsValue" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ClassCastException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ entrySet -->
      <method access="public" instrs="15" name="entrySet" valid="no">
        <signature>
          <return>
            <object>java.util.Set</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ forEach -->
      <method access="public" instrs="50" name="forEach" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.BiConsumer</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ get -->
      <method access="public" instrs="13" name="get" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ClassCastException</throws>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getNode -->
      <method access="default" final="yes" instrs="77" name="getNode" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.util.HashMap$Node</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getOrDefault -->
      <method access="public" instrs="13" name="getOrDefault" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ hash -->
      <method access="default" final="yes" instrs="13" name="hash" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ internalWriteEntries -->
      <method access="default" instrs="35" name="internalWriteEntries" valid="no">
        <signature>
          <arg nr="1">
            <object>java.io.ObjectOutputStream</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isEmpty -->
      <method access="public" instrs="7" name="isEmpty">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <time-cost>
	    <cost>
	      <cn>11</cn>
	    </cost>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ keySet -->
      <method access="public" instrs="15" name="keySet" valid="no">
        <signature>
          <return>
            <object>java.util.Set</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ loadFactor -->
      <method access="default" final="yes" instrs="3" name="loadFactor">
        <signature>
          <return>
            <float/>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <taint>
	    <transfer><this/><return/></transfer>
	  </taint>
	  <time-cost>
	    <cost>
	      <cn>4</cn>
	    </cost>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ merge -->
      <method access="public" instrs="172" name="merge" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="3">
            <object>java.util.function.BiFunction</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newNode -->
      <method access="default" instrs="8" name="newNode">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="3">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="4">
            <object>java.util.HashMap$Node</object>
          </arg>
          <return>
            <object>java.util.HashMap$Node</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <taint>
	    <transfer><arg nr="1"/><return/></transfer>
	    <transfer><arg nr="2"/><return/></transfer>
	    <transfer><arg nr="3"/><return/></transfer>
	    <transfer><arg nr="4"/><return/></transfer>
	    <transfer><this/><return/></transfer>
	  </taint>
	  <time-cost>
	    <cost>
	      <cn>78</cn>
	    </cost>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newTreeNode -->
      <method access="default" instrs="8" name="newTreeNode" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="3">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="4">
            <object>java.util.HashMap$Node</object>
          </arg>
          <return>
            <object>java.util.HashMap$TreeNode</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ put -->
      <method access="public" instrs="9" name="put" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.UnsupportedOperationException</throws>
          <throws>java.lang.ClassCastException</throws>
          <throws>java.lang.NullPointerException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putAll -->
      <method access="public" instrs="5" name="putAll" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Map</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putIfAbsent -->
      <method access="public" instrs="9" name="putIfAbsent" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putMapEntries -->
      <method access="default" final="yes" instrs="69" name="putMapEntries" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Map</object>
          </arg>
          <arg nr="2">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putVal -->
      <method access="default" final="yes" instrs="155" name="putVal" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="3">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="4">
            <boolean/>
          </arg>
          <arg nr="5">
            <boolean/>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readObject -->
      <method access="private" instrs="126" name="readObject" valid="no">
        <signature>
          <arg nr="1">
            <object>java.io.ObjectInputStream</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.ClassNotFoundException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ reinitialize -->
      <method access="default" instrs="22" name="reinitialize">
        <signature/>
        <exceptions/>
        <summary>
	  <time-cost>
	    <cost>
	      <cn>108</cn>
	    </cost>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ remove -->
      <method access="public" instrs="16" name="remove" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ remove -->
      <method access="public" instrs="13" name="remove" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ removeNode -->
      <method access="default" final="yes" instrs="142" name="removeNode" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="3">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="4">
            <boolean/>
          </arg>
          <arg nr="5">
            <boolean/>
          </arg>
          <return>
            <object>java.util.HashMap$Node</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ replace -->
      <method access="public" instrs="30" name="replace" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="3">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ replace -->
      <method access="public" instrs="21" name="replace" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ replaceAll -->
      <method access="public" instrs="52" name="replaceAll" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.function.BiFunction</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ replacementNode -->
      <method access="default" instrs="11" name="replacementNode">
        <signature>
          <arg nr="1">
            <object>java.util.HashMap$Node</object>
          </arg>
          <arg nr="2">
            <object>java.util.HashMap$Node</object>
          </arg>
          <return>
            <object>java.util.HashMap$Node</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <taint>
	    <transfer><arg nr="1"/><return/></transfer>
	    <transfer><arg nr="2"/><return/></transfer>
	    <transfer><this/><return/></transfer>
	  </taint>
	  <time-cost>
	    <cost>
	      <cn>84</cn>
	    </cost>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ replacementTreeNode -->
      <method access="default" instrs="11" name="replacementTreeNode" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.HashMap$Node</object>
          </arg>
          <arg nr="2">
            <object>java.util.HashMap$Node</object>
          </arg>
          <return>
            <object>java.util.HashMap$TreeNode</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ resize -->
      <method access="default" final="yes" instrs="185" name="resize" valid="no">
        <signature>
          <return>
            <array>
              <object>java.util.HashMap$Node</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ size -->
      <method access="public" instrs="3" name="size">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <time-cost>
	    <cost>
	      <cn>4</cn>
	    </cost>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ tableSizeFor -->
      <method access="default" final="yes" instrs="47" name="tableSizeFor" static="yes">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <taint>
	    <transfer><arg nr="1"/><return/></transfer>
	  </taint>
	  <time-cost>
	    <cost lb="77" ub="89"/>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ treeifyBin -->
      <method access="default" final="yes" instrs="61" name="treeifyBin" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <object>java.util.HashMap$Node</object>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ values -->
      <method access="public" instrs="15" name="values">
        <signature>
          <return>
            <object>java.util.Collection</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <time-cost>
	    <cost lb="14"  ub="229"/>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ writeObject -->
      <method access="private" instrs="16" name="writeObject" valid="no">
        <signature>
          <arg nr="1">
            <object>java.io.ObjectOutputStream</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary/>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2019, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
