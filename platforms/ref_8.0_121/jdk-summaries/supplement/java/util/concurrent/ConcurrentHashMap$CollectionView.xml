<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2019-01-14 12:17:53"/>
  <class abstract="yes" name="ConcurrentHashMap$CollectionView" package="java.util.concurrent">
    <interfaces>
      <implements>java.util.Collection</implements>
      <implements>java.io.Serializable</implements>
      <implements>java.lang.Iterable</implements>
    </interfaces>
    <!-- =============================== FIELDS ===============================  -->
    <fields>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:serialVersionUID -->
      <field access="private" final="yes" name="serialVersionUID" static="yes">
        <signature>
          <long/>
        </signature>
        <value>
          <long value="7249069246763182397"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:map -->
      <field access="default" final="yes" name="map">
        <signature>
          <object>java.util.concurrent.ConcurrentHashMap</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:oomeMsg -->
      <field access="private" final="yes" name="oomeMsg" not-null="yes" static="yes">
        <signature>
          <object>java.lang.String</object>
        </signature>
        <value>
          <string value="Required array size too large"/>
        </value>
      </field>
    </fields>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.util.concurrent.ConcurrentHashMap) -->
      <constructor access="default" instrs="6">
        <signature>
          <arg nr="1">
            <object>java.util.concurrent.ConcurrentHashMap</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
	  <taint>
	    <transfer><arg nr="1"/><this/></transfer>
	  </taint>
	  <time-cost>
	    <cost>
	      <cn>22</cn>
	    </cost>
	  </time-cost>
	</summary>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ clear -->
      <method access="public" final="yes" instrs="4" name="clear">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ contains -->
      <method abstract="yes" access="public" name="contains" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ containsAll -->
      <method access="public" final="yes" instrs="23" name="containsAll" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Collection</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getMap -->
      <method access="public" instrs="3" name="getMap">
        <signature>
          <return>
            <object>java.util.concurrent.ConcurrentHashMap</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
	  <time-cost>
	    <cost>
	      <cn>4</cn>
	    </cost>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isEmpty -->
      <method access="public" final="yes" instrs="4" name="isEmpty">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ iterator -->
      <method abstract="yes" access="public" name="iterator">
        <signature>
          <return>
            <object>java.util.Iterator</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ remove -->
      <method abstract="yes" access="public" name="remove" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ removeAll -->
      <method access="public" final="yes" instrs="26" name="removeAll" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Collection</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ retainAll -->
      <method access="public" final="yes" instrs="26" name="retainAll" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Collection</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ size -->
      <method access="public" final="yes" instrs="4" name="size">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
	  <postconditions>
	    <post>
	      <math>
		<apply>
		  <geq/>
		  <return/>
		  <cn>0</cn>
		</apply>
	      </math>
	    </post>
	  </postconditions>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toArray -->
      <method access="public" final="yes" instrs="74" name="toArray" valid="no">
        <signature>
          <return>
            <array>
              <object>java.lang.Object</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toArray -->
      <method access="public" final="yes" instrs="100" name="toArray" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <object>java.lang.Object</object>
            </array>
          </arg>
          <return>
            <array>
              <object>java.lang.Object</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toString -->
      <method access="public" final="yes" instrs="42" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
	</summary>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2019, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
