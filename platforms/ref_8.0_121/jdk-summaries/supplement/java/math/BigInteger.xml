<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-05-30 16:14:19"/>
  <class name="BigInteger" package="java.math">
    <superclass>java.lang.Number</superclass>
    <interfaces>
      <implements>java.lang.Comparable</implements>
      <implements>java.io.Serializable</implements>
    </interfaces>
    <class-properties>
      <cprop method="bitLength" name="size">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </cprop>
    </class-properties>
    <!-- =============================== FIELDS ===============================  -->
    <fields>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:signum -->
      <field access="default" final="yes" name="signum">
        <signature>
          <int/>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:mag -->
      <field access="default" final="yes" name="mag">
        <signature>
          <array>
            <int/>
          </array>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:bitCount -->
      <field access="private" name="bitCount">
        <signature>
          <int/>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:bitLength -->
      <field access="private" name="bitLength">
        <signature>
          <int/>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:lowestSetBit -->
      <field access="private" name="lowestSetBit">
        <signature>
          <int/>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:firstNonzeroIntNum -->
      <field access="private" name="firstNonzeroIntNum">
        <signature>
          <int/>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:LONG_MASK -->
      <field access="default" final="yes" name="LONG_MASK" static="yes">
        <signature>
          <long/>
        </signature>
        <value>
          <long value="4294967295"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:MAX_MAG_LENGTH -->
      <field access="private" final="yes" name="MAX_MAG_LENGTH" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="67108864"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:PRIME_SEARCH_BIT_LENGTH_LIMIT -->
      <field access="private" final="yes" name="PRIME_SEARCH_BIT_LENGTH_LIMIT" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="500000000"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:KARATSUBA_THRESHOLD -->
      <field access="private" final="yes" name="KARATSUBA_THRESHOLD" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="80"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:TOOM_COOK_THRESHOLD -->
      <field access="private" final="yes" name="TOOM_COOK_THRESHOLD" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="240"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:KARATSUBA_SQUARE_THRESHOLD -->
      <field access="private" final="yes" name="KARATSUBA_SQUARE_THRESHOLD" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="128"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:TOOM_COOK_SQUARE_THRESHOLD -->
      <field access="private" final="yes" name="TOOM_COOK_SQUARE_THRESHOLD" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="216"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:BURNIKEL_ZIEGLER_THRESHOLD -->
      <field access="default" final="yes" name="BURNIKEL_ZIEGLER_THRESHOLD" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="80"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:BURNIKEL_ZIEGLER_OFFSET -->
      <field access="default" final="yes" name="BURNIKEL_ZIEGLER_OFFSET" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="40"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~ field:SCHOENHAGE_BASE_CONVERSION_THRESHOLD -->
      <field access="private" final="yes" name="SCHOENHAGE_BASE_CONVERSION_THRESHOLD" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="20"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:MULTIPLY_SQUARE_THRESHOLD -->
      <field access="private" final="yes" name="MULTIPLY_SQUARE_THRESHOLD" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="20"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:MONTGOMERY_INTRINSIC_THRESHOLD -->
      <field access="private" final="yes" name="MONTGOMERY_INTRINSIC_THRESHOLD" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="512"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:bitsPerDigit -->
      <field access="private" name="bitsPerDigit" static="yes">
        <signature>
          <array>
            <long/>
          </array>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:SMALL_PRIME_THRESHOLD -->
      <field access="private" final="yes" name="SMALL_PRIME_THRESHOLD" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="95"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:DEFAULT_PRIME_CERTAINTY -->
      <field access="private" final="yes" name="DEFAULT_PRIME_CERTAINTY" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="100"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:SMALL_PRIME_PRODUCT -->
      <field access="private" final="yes" name="SMALL_PRIME_PRODUCT" not-null="yes" static="yes">
        <signature>
          <object>java.math.BigInteger</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:MAX_CONSTANT -->
      <field access="private" final="yes" name="MAX_CONSTANT" static="yes">
        <signature>
          <int/>
        </signature>
        <value>
          <int value="16"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:posConst -->
      <field access="private" name="posConst" static="yes">
        <signature>
          <array>
            <object>java.math.BigInteger</object>
          </array>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:negConst -->
      <field access="private" name="negConst" static="yes">
        <signature>
          <array>
            <object>java.math.BigInteger</object>
          </array>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:powerCache -->
      <field access="private" name="powerCache" static="yes">
        <signature>
          <array>
            <array>
              <object>java.math.BigInteger</object>
            </array>
          </array>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:logCache -->
      <field access="private" final="yes" name="logCache" not-null="yes" static="yes">
        <signature>
          <array>
            <double/>
          </array>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:LOG_TWO -->
      <field access="private" final="yes" name="LOG_TWO" static="yes">
        <signature>
          <double/>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:ZERO -->
      <field access="public" final="yes" name="ZERO" not-null="yes" static="yes">
        <signature>
          <object>java.math.BigInteger</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:ONE -->
      <field access="public" final="yes" name="ONE" not-null="yes" static="yes">
        <signature>
          <object>java.math.BigInteger</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:TWO -->
      <field access="private" final="yes" name="TWO" not-null="yes" static="yes">
        <signature>
          <object>java.math.BigInteger</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:NEGATIVE_ONE -->
      <field access="private" final="yes" name="NEGATIVE_ONE" not-null="yes" static="yes">
        <signature>
          <object>java.math.BigInteger</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:TEN -->
      <field access="public" final="yes" name="TEN" not-null="yes" static="yes">
        <signature>
          <object>java.math.BigInteger</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:bnExpModThreshTable -->
      <field access="default" name="bnExpModThreshTable" static="yes">
        <signature>
          <array>
            <int/>
          </array>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:zeros -->
      <field access="private" name="zeros" static="yes">
        <signature>
          <array>
            <object>java.lang.String</object>
          </array>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:digitsPerLong -->
      <field access="private" name="digitsPerLong" static="yes">
        <signature>
          <array>
            <int/>
          </array>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:longRadix -->
      <field access="private" name="longRadix" static="yes">
        <signature>
          <array>
            <object>java.math.BigInteger</object>
          </array>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:digitsPerInt -->
      <field access="private" name="digitsPerInt" static="yes">
        <signature>
          <array>
            <int/>
          </array>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:intRadix -->
      <field access="private" name="intRadix" static="yes">
        <signature>
          <array>
            <int/>
          </array>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:serialVersionUID -->
      <field access="private" final="yes" name="serialVersionUID" static="yes">
        <signature>
          <long/>
        </signature>
        <value>
          <long value="-8287574255936472291"/>
        </value>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:serialPersistentFields -->
      <field access="private" final="yes" name="serialPersistentFields" not-null="yes" static="yes">
        <signature>
          <array>
            <object>java.io.ObjectStreamField</object>
          </array>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:$assertionsDisabled -->
      <field access="default" final="yes" name="$assertionsDisabled" static="yes">
        <signature>
          <boolean/>
        </signature>
      </field>
    </fields>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (byte[]) -->
      <constructor access="public" instrs="43" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
        </exceptions>
        <summary/>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (int[]) -->
      <constructor access="private" instrs="43" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (int,byte[]) -->
      <constructor access="public" instrs="43" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <array>
              <byte/>
            </array>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
        </exceptions>
        <summary/>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (int,int[]) -->
      <constructor access="private" instrs="43" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.String,int) -->
      <constructor access="public" instrs="215" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
        </exceptions>
        <summary/>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (char[],int,int) -->
      <constructor access="default" instrs="127" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <char/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.String) -->
      <constructor access="public" instrs="5" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
        </exceptions>
        <summary/>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (int,java.util.Random) -->
      <constructor access="public" instrs="7" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.util.Random</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
        </exceptions>
        <summary/>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (int,int,java.util.Random) -->
      <constructor access="public" instrs="31" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <object>java.util.Random</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.ArithmeticException</throws>
        </exceptions>
        <summary/>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (int[],int) -->
      <constructor access="default" instrs="21" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (byte[],int) -->
      <constructor access="private" instrs="22" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (long) -->
      <constructor access="private" instrs="50">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
        <exceptions/>
        <summary>
	  <time-cost>
	    <cost lb="285" ub="306"/>
	  </time-cost>
	</summary>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ abs -->
      <method access="public" instrs="8" name="abs" valid="no">
        <signature>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ add -->
      <method access="public" instrs="63" name="add" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ add -->
      <method access="default" instrs="65" name="add" valid="no">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ add -->
      <method access="private" instrs="165" name="add" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ add -->
      <method access="private" instrs="137" name="add" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ addOne -->
      <method access="default" instrs="57" name="addOne" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ and -->
      <method access="public" instrs="38" name="and" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ andNot -->
      <method access="public" instrs="40" name="andNot" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ bitCount -->
      <method access="public" instrs="67" name="bitCount" valid="no">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ bitLength -->
      <method access="private" instrs="15" name="bitLength" static="yes">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <return/>
	    </transfer>
	  </taint>
	  <postconditions>
	    <post>
	      <math>
		<apply>
		  <geq/>
		  <return/>
		  <cn>0</cn>
		</apply>
	      </math>
	    </post>
	  </postconditions>
	  <time-cost>
	    <cost lb="15" ub="475"/>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ bitLength -->
      <method access="public" instrs="81" name="bitLength" valid="no">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ bitLengthForInt -->
      <method access="default" instrs="5" name="bitLengthForInt" static="yes">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <time-cost>
	    <cost lb="185" ub="284"/>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ byteValueExact -->
      <method access="public" instrs="26" name="byteValueExact" valid="no">
        <signature>
          <return>
            <byte/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkRange -->
      <method access="private" instrs="17" name="checkRange" valid="no">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ clearBit -->
      <method access="public" instrs="63" name="clearBit" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <geq/>
                  <arg nr="1"/>
                  <cn>0</cn>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.ArithmeticException</exn>
          </c-throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ compareMagnitude -->
      <method access="default" final="yes" instrs="56" name="compareMagnitude" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ compareMagnitude -->
      <method access="default" final="yes" instrs="125" name="compareMagnitude" valid="no">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ compareTo -->
      <method access="public" instrs="27" name="compareTo" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ compareTo -->
      <method access="public" bridge="yes" instrs="5" name="compareTo" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NullPointerException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ destructiveMulAdd -->
      <method access="private" instrs="94" name="destructiveMulAdd" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ divide -->
      <method access="public" instrs="22" name="divide" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ArithmeticException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ divideAndRemainder -->
      <method access="public" instrs="22" name="divideAndRemainder" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <array>
              <object>java.math.BigInteger</object>
            </array>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ArithmeticException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ divideAndRemainderBurnikelZiegler -->
      <method access="private" instrs="49" name="divideAndRemainderBurnikelZiegler" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <array>
              <object>java.math.BigInteger</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ divideAndRemainderKnuth -->
      <method access="private" instrs="46" name="divideAndRemainderKnuth" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <array>
              <object>java.math.BigInteger</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ divideBurnikelZiegler -->
      <method access="private" instrs="6" name="divideBurnikelZiegler" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ divideKnuth -->
      <method access="private" instrs="30" name="divideKnuth" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ doubleValue -->
      <method access="public" instrs="173" name="doubleValue" valid="no">
        <signature>
          <return>
            <double/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ equals -->
      <method access="public" instrs="53" name="equals" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ exactDivideBy3 -->
      <method access="private" instrs="75" name="exactDivideBy3" valid="no">
        <signature>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ firstNonzeroIntNum -->
      <method access="private" instrs="40" name="firstNonzeroIntNum" valid="no">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ flipBit -->
      <method access="public" instrs="57" name="flipBit" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ floatValue -->
      <method access="public" instrs="134" name="floatValue" valid="no">
        <signature>
          <return>
            <float/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ gcd -->
      <method access="public" instrs="30" name="gcd" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getInt -->
      <method access="private" instrs="39" name="getInt" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getLower -->
      <method access="private" instrs="29" name="getLower" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getLowestSetBit -->
      <method access="public" instrs="41" name="getLowestSetBit" valid="no">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getPrimeSearchLen -->
      <method access="private" instrs="14" name="getPrimeSearchLen" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getRadixConversionCache -->
      <method access="private" instrs="61" name="getRadixConversionCache" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getToomSlice -->
      <method access="private" instrs="80" name="getToomSlice" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getUpper -->
      <method access="private" instrs="30" name="getUpper" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ hashCode -->
      <method access="public" instrs="30" name="hashCode" valid="no">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ implMontgomeryMultiply -->
      <method access="private" instrs="14" name="implMontgomeryMultiply" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="3">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
          <arg nr="5">
            <long/>
          </arg>
          <arg nr="6">
            <array>
              <int/>
            </array>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ implMontgomeryMultiplyChecks -->
      <method access="private" instrs="62" name="implMontgomeryMultiplyChecks" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="3">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
          <arg nr="5">
            <array>
              <int/>
            </array>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.RuntimeException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ implMontgomerySquare -->
      <method access="private" instrs="12" name="implMontgomerySquare" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <long/>
          </arg>
          <arg nr="5">
            <array>
              <int/>
            </array>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ implMulAdd -->
      <method access="private" instrs="53" name="implMulAdd" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
          <arg nr="5">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ implMulAddCheck -->
      <method access="private" instrs="86" name="implMulAddCheck" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
          <arg nr="5">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ implSquareToLen -->
      <method access="private" final="yes" instrs="98" name="implSquareToLen" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ implSquareToLenChecks -->
      <method access="private" instrs="98" name="implSquareToLenChecks" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.RuntimeException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ intArrayCmpToLen -->
      <method access="private" instrs="35" name="intArrayCmpToLen" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ intLength -->
      <method access="private" instrs="7" name="intLength" valid="no">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ intValue -->
      <method access="public" instrs="8" name="intValue" valid="no">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ intValueExact -->
      <method access="public" instrs="17" name="intValueExact" valid="no">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isProbablePrime -->
      <method access="public" instrs="28" name="isProbablePrime" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ jacobiSymbol -->
      <method access="private" instrs="148" name="jacobiSymbol" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ javaIncrement -->
      <method access="default" instrs="36" name="javaIncrement" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ largePrime -->
      <method access="private" instrs="92" name="largePrime" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <object>java.util.Random</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ leftShift -->
      <method access="private" instrs="69" name="leftShift" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ longValue -->
      <method access="public" instrs="21" name="longValue" valid="no">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ longValueExact -->
      <method access="public" instrs="17" name="longValueExact" valid="no">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ lucasLehmerSequence -->
      <method access="private" instrs="97" name="lucasLehmerSequence" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.math.BigInteger</object>
          </arg>
          <arg nr="3">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ magSerializedForm -->
      <method access="private" instrs="69" name="magSerializedForm" valid="no">
        <signature>
          <return>
            <array>
              <byte/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ makePositive -->
      <method access="private" instrs="148" name="makePositive" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ makePositive -->
      <method access="private" instrs="79" name="makePositive" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ materialize -->
      <method access="private" instrs="11" name="materialize" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ max -->
      <method access="public" instrs="8" name="max" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ min -->
      <method access="public" instrs="8" name="min" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ mod -->
      <method access="public" instrs="21" name="mod" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <geq/>
                  <arg nr="1"/>
                  <cn>1</cn>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.ArithmeticException</exn>
          </c-throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ mod2 -->
      <method access="private" instrs="63" name="mod2" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ modInverse -->
      <method access="public" instrs="52" name="modInverse" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ArithmeticException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ modPow -->
      <method access="public" instrs="217" name="modPow" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <arg nr="2">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ArithmeticException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ modPow2 -->
      <method access="private" instrs="51" name="modPow2" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ montReduce -->
      <method access="private" instrs="59" name="montReduce" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ montgomeryMultiply -->
      <method access="private" instrs="33" name="montgomeryMultiply" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="3">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
          <arg nr="5">
            <long/>
          </arg>
          <arg nr="6">
            <array>
              <int/>
            </array>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ montgomerySquare -->
      <method access="private" instrs="30" name="montgomerySquare" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <long/>
          </arg>
          <arg nr="5">
            <array>
              <int/>
            </array>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ mulAdd -->
      <method access="default" instrs="13" name="mulAdd" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
          <arg nr="5">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ multiply -->
      <method access="public" instrs="100" name="multiply" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ multiply -->
      <method access="default" instrs="174" name="multiply" valid="no">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ multiplyByInt -->
      <method access="private" instrs="84" name="multiplyByInt" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ multiplyKaratsuba -->
      <method access="private" instrs="76" name="multiplyKaratsuba" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <arg nr="2">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ multiplyToLen -->
      <method access="private" instrs="128" name="multiplyToLen" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
          <arg nr="5">
            <array>
              <int/>
            </array>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ multiplyToomCook3 -->
      <method access="private" instrs="187" name="multiplyToomCook3" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <arg nr="2">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ negate -->
      <method access="public" instrs="9" name="negate" valid="no">
        <signature>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ nextProbablePrime -->
      <method access="public" instrs="181" name="nextProbablePrime" valid="no">
        <signature>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ not -->
      <method access="public" instrs="28" name="not" valid="no">
        <signature>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ oddModPow -->
      <method access="private" instrs="417" name="oddModPow" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <arg nr="2">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ or -->
      <method access="public" instrs="38" name="or" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ parseInt -->
      <method access="private" instrs="50" name="parseInt" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <char/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ passesLucasLehmer -->
      <method access="private" instrs="35" name="passesLucasLehmer" valid="no">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ passesMillerRabin -->
      <method access="private" instrs="76" name="passesMillerRabin" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.util.Random</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pow -->
      <method access="public" instrs="222" name="pow" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <geq/>
                  <arg nr="1"/>
                  <cn>0</cn>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.ArithmeticException</exn>
          </c-throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ primeToCertainty -->
      <method access="default" instrs="75" name="primeToCertainty" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.util.Random</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ primitiveLeftShift -->
      <method access="default" instrs="54" name="primitiveLeftShift" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ primitiveRightShift -->
      <method access="default" instrs="42" name="primitiveRightShift" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ probablePrime -->
      <method access="public" instrs="21" name="probablePrime" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.util.Random</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ArithmeticException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ randomBits -->
      <method access="private" instrs="45" name="randomBits" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.util.Random</object>
          </arg>
          <return>
            <array>
              <byte/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readObject -->
      <method access="private" instrs="82" name="readObject" valid="no">
        <signature>
          <arg nr="1">
            <object>java.io.ObjectInputStream</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.ClassNotFoundException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ remainder -->
      <method access="public" instrs="22" name="remainder" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ArithmeticException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ remainderBurnikelZiegler -->
      <method access="private" instrs="6" name="remainderBurnikelZiegler" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ remainderKnuth -->
      <method access="private" instrs="24" name="remainderKnuth" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ reportOverflow -->
      <method access="private" instrs="5" name="reportOverflow" static="yes" valid="no">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setBit -->
      <method access="public" instrs="57" name="setBit" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ shiftLeft -->
      <method access="public" instrs="26" name="shiftLeft" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ArithmeticException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ shiftLeft -->
      <method access="private" instrs="93" name="shiftLeft" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ shiftRight -->
      <method access="public" instrs="26" name="shiftRight" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ArithmeticException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ shiftRightImpl -->
      <method access="private" instrs="162" name="shiftRightImpl" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ shortValueExact -->
      <method access="public" instrs="26" name="shortValueExact" valid="no">
        <signature>
          <return>
            <short/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ signBit -->
      <method access="private" instrs="7" name="signBit">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <time-cost>
	    <cost>
	      <cn>17</cn>
	    </cost>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ signInt -->
      <method access="private" instrs="7" name="signInt">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <time-cost>
	    <cost>
	      <cn>17</cn>
	    </cost>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ signum -->
      <method access="public" instrs="3" name="signum">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <time-cost>
	    <cost>
	      <cn>10</cn>
	    </cost>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ smallPrime -->
      <method access="private" instrs="157" name="smallPrime" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <object>java.util.Random</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ smallToString -->
      <method access="private" instrs="138" name="smallToString" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ square -->
      <method access="private" instrs="34" name="square" valid="no">
        <signature>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ squareKaratsuba -->
      <method access="private" instrs="43" name="squareKaratsuba" valid="no">
        <signature>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ squareToLen -->
      <method access="private" final="yes" instrs="24" name="squareToLen" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <array>
              <int/>
            </array>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ squareToomCook3 -->
      <method access="private" instrs="127" name="squareToomCook3" valid="no">
        <signature>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stripLeadingZeroBytes -->
      <method access="private" instrs="81" name="stripLeadingZeroBytes" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stripLeadingZeroInts -->
      <method access="private" instrs="19" name="stripLeadingZeroInts" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ subN -->
      <method access="private" instrs="34" name="subN" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ subtract -->
      <method access="private" instrs="115" name="subtract" static="yes">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <time-cost>
	    <cost lb="235" ub="304"/>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ subtract -->
      <method access="private" instrs="113" name="subtract" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ subtract -->
      <method access="public" instrs="64" name="subtract" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ subtract -->
      <method access="private" instrs="82" name="subtract" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <arg nr="2">
            <array>
              <int/>
            </array>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ testBit -->
      <method access="public" instrs="23" name="testBit" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <c-throws>
            <safety-condition>
              <math>
                <apply>
                  <geq/>
                  <arg nr="1"/>
                  <cn>0</cn>
                </apply>
              </math>
            </safety-condition>
            <exn>java.lang.ArithmeticException</exn>
          </c-throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toByteArray -->
      <method access="public" instrs="47" name="toByteArray" valid="no">
        <signature>
          <return>
            <array>
              <byte/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toString -->
      <method access="public" instrs="49" name="toString" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toString -->
      <method access="private" instrs="81" name="toString" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <arg nr="2">
            <object>java.lang.StringBuilder</object>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toString -->
      <method access="public" instrs="4" name="toString" valid="no">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ trustedStripLeadingZeroInts -->
      <method access="private" instrs="23" name="trustedStripLeadingZeroInts" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <return>
            <array>
              <int/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ valueOf -->
      <method access="public" instrs="38" name="valueOf" static="yes">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
	  <time-cost>
	    <cost lb="36" ub="456"/>
	  </time-cost>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ valueOf -->
      <method access="private" instrs="15" name="valueOf" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <array>
              <int/>
            </array>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ writeObject -->
      <method access="private" instrs="32" name="writeObject" valid="no">
        <signature>
          <arg nr="1">
            <object>java.io.ObjectOutputStream</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
        </exceptions>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ xor -->
      <method access="public" instrs="38" name="xor" valid="no">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <return>
            <object>java.math.BigInteger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
