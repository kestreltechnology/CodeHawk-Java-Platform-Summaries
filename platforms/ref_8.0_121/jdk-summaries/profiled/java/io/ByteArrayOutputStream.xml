<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2019-01-18 23:22:40"/>
  <class name="ByteArrayOutputStream" package="java.io">
    <superclass>java.io.OutputStream</superclass>
    <interfaces>
      <implements>java.io.Closeable</implements>
      <implements>java.io.Flushable</implements>
      <implements>java.lang.AutoCloseable</implements>
    </interfaces>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ () -->
      <constructor access="public">
        <signature/>
        <exceptions/>
        <summary>
          <time-cost>
            <cost>
              <cn>480</cn>
            </cost>
          </time-cost>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (int) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ close -->
      <method access="public" name="close">
        <signature/>
        <exceptions/>
        <summary>
          <time-cost>
            <cost>
              <cn>10</cn>
            </cost>
          </time-cost>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ensureCapacity -->
      <method access="private" name="ensureCapacity">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ grow -->
      <method access="private" name="grow">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ hugeCapacity -->
      <method access="private" name="hugeCapacity" static="yes">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ reset -->
      <method access="public" name="reset">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ size -->
      <method access="public" name="size">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <time-cost>
            <cost>
              <cn>100</cn>
            </cost>
          </time-cost>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toByteArray -->
      <method access="public" name="toByteArray">
        <signature>
          <return>
            <array>
              <byte/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <time-cost>
            <cost>
              <apply>
                <plus/>
                <cn>350</cn>
                <apply>
                  <times/>
                  <apply>
                    <divide/>
                    <cn>13</cn>
                    <cn>50</cn>
                  </apply>
                  <apply>
                    <size/>
                    <this/>
                  </apply>
                </apply>
              </apply>
            </cost>
          </time-cost>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toString -->
      <method access="public" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toString -->
      <method access="public" name="toString">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toString -->
      <method access="public" name="toString">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ write -->
      <method access="public" name="write">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <time-cost>
            <cost>
              <cn>200</cn>
            </cost>
          </time-cost>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ write -->
      <method access="public" name="write">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <time-cost>
            <cost>
              <apply>
                <plus/>
                <cn>250</cn>
                <apply>
                  <times/>
                  <apply>
                    <divide/>
                    <apply>
                      <size/>
                      <arg nr="1"/>
                    </apply>
                    <cn>32</cn>
                  </apply>
                  <apply>
                    <size/>
                    <arg nr="1"/>
                  </apply>
                </apply>
              </apply>
            </cost>
          </time-cost>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ writeTo -->
      <method access="public" name="writeTo">
        <signature>
          <arg nr="1">
            <object>java.io.OutputStream</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2019, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
