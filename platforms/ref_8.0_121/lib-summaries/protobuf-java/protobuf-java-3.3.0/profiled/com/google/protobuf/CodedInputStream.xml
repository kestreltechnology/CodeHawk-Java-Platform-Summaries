<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2019-01-14 18:54:58"/>
  <class abstract="yes" name="CodedInputStream" package="com.google.protobuf">
    <interfaces/>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ () -->
      <method access="private">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (com.google.protobuf.CodedInputStream$1) -->
      <method access="default">
        <signature>
          <arg nr="1">
            <object>com.google.protobuf.CodedInputStream$1</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkLastTagWas -->
      <method abstract="yes" access="public" name="checkLastTagWas">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ decodeZigZag32 -->
      <method access="public" name="decodeZigZag32" static="yes">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ decodeZigZag64 -->
      <method access="public" name="decodeZigZag64" static="yes">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ enableAliasing -->
      <method abstract="yes" access="public" name="enableAliasing">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getBytesUntilLimit -->
      <method abstract="yes" access="public" name="getBytesUntilLimit">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getLastTag -->
      <method abstract="yes" access="public" name="getLastTag">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getTotalBytesRead -->
      <method abstract="yes" access="public" name="getTotalBytesRead">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isAtEnd -->
      <method abstract="yes" access="public" name="isAtEnd">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newInstance -->
      <method access="public" name="newInstance" static="yes">
        <signature>
          <arg nr="1">
            <object>java.io.InputStream</object>
          </arg>
          <return>
            <object>com.google.protobuf.CodedInputStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newInstance -->
      <method access="default" name="newInstance" static="yes">
        <signature>
          <arg nr="1">
            <object>java.io.InputStream</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <object>com.google.protobuf.CodedInputStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newInstance -->
      <method access="public" name="newInstance" static="yes">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <return>
            <object>com.google.protobuf.CodedInputStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newInstance -->
      <method access="public" name="newInstance" static="yes">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <return>
            <object>com.google.protobuf.CodedInputStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newInstance -->
      <method access="default" name="newInstance" static="yes">
        <signature>
          <arg nr="1">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <boolean/>
          </arg>
          <return>
            <object>com.google.protobuf.CodedInputStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newInstance -->
      <method access="public" name="newInstance" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.ByteBuffer</object>
          </arg>
          <return>
            <object>com.google.protobuf.CodedInputStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newInstance -->
      <method access="default" name="newInstance" static="yes">
        <signature>
          <arg nr="1">
            <object>java.nio.ByteBuffer</object>
          </arg>
          <arg nr="2">
            <boolean/>
          </arg>
          <return>
            <object>com.google.protobuf.CodedInputStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ popLimit -->
      <method abstract="yes" access="public" name="popLimit">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pushLimit -->
      <method abstract="yes" access="public" name="pushLimit">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readBool -->
      <method abstract="yes" access="public" name="readBool">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readByteArray -->
      <method abstract="yes" access="public" name="readByteArray">
        <signature>
          <return>
            <array>
              <byte/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readByteBuffer -->
      <method abstract="yes" access="public" name="readByteBuffer">
        <signature>
          <return>
            <object>java.nio.ByteBuffer</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readBytes -->
      <method abstract="yes" access="public" name="readBytes">
        <signature>
          <return>
            <object>com.google.protobuf.ByteString</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readDouble -->
      <method abstract="yes" access="public" name="readDouble">
        <signature>
          <return>
            <double/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readEnum -->
      <method abstract="yes" access="public" name="readEnum">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readFixed32 -->
      <method abstract="yes" access="public" name="readFixed32">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readFixed64 -->
      <method abstract="yes" access="public" name="readFixed64">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readFloat -->
      <method abstract="yes" access="public" name="readFloat">
        <signature>
          <return>
            <float/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readGroup -->
      <method abstract="yes" access="public" name="readGroup">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>com.google.protobuf.MessageLite$Builder</object>
          </arg>
          <arg nr="3">
            <object>com.google.protobuf.ExtensionRegistryLite</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readGroup -->
      <method abstract="yes" access="public" name="readGroup">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>com.google.protobuf.Parser</object>
          </arg>
          <arg nr="3">
            <object>com.google.protobuf.ExtensionRegistryLite</object>
          </arg>
          <return>
            <object>com.google.protobuf.MessageLite</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readInt32 -->
      <method abstract="yes" access="public" name="readInt32">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readInt64 -->
      <method abstract="yes" access="public" name="readInt64">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readMessage -->
      <method abstract="yes" access="public" name="readMessage">
        <signature>
          <arg nr="1">
            <object>com.google.protobuf.MessageLite$Builder</object>
          </arg>
          <arg nr="2">
            <object>com.google.protobuf.ExtensionRegistryLite</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readMessage -->
      <method abstract="yes" access="public" name="readMessage">
        <signature>
          <arg nr="1">
            <object>com.google.protobuf.Parser</object>
          </arg>
          <arg nr="2">
            <object>com.google.protobuf.ExtensionRegistryLite</object>
          </arg>
          <return>
            <object>com.google.protobuf.MessageLite</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readRawByte -->
      <method abstract="yes" access="public" name="readRawByte">
        <signature>
          <return>
            <byte/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readRawBytes -->
      <method abstract="yes" access="public" name="readRawBytes">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <array>
              <byte/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readRawLittleEndian32 -->
      <method abstract="yes" access="public" name="readRawLittleEndian32">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readRawLittleEndian64 -->
      <method abstract="yes" access="public" name="readRawLittleEndian64">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readRawVarint32 -->
      <method abstract="yes" access="public" name="readRawVarint32">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readRawVarint32 -->
      <method access="public" name="readRawVarint32" static="yes">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.io.InputStream</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readRawVarint32 -->
      <method access="default" name="readRawVarint32" static="yes">
        <signature>
          <arg nr="1">
            <object>java.io.InputStream</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readRawVarint64 -->
      <method abstract="yes" access="public" name="readRawVarint64">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readRawVarint64SlowPath -->
      <method abstract="yes" access="default" name="readRawVarint64SlowPath">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readSFixed32 -->
      <method abstract="yes" access="public" name="readSFixed32">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readSFixed64 -->
      <method abstract="yes" access="public" name="readSFixed64">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readSInt32 -->
      <method abstract="yes" access="public" name="readSInt32">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readSInt64 -->
      <method abstract="yes" access="public" name="readSInt64">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readString -->
      <method abstract="yes" access="public" name="readString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readStringRequireUtf8 -->
      <method abstract="yes" access="public" name="readStringRequireUtf8">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readTag -->
      <method abstract="yes" access="public" name="readTag">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readUInt32 -->
      <method abstract="yes" access="public" name="readUInt32">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readUInt64 -->
      <method abstract="yes" access="public" name="readUInt64">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readUnknownGroup -->
      <method abstract="yes" access="public" name="readUnknownGroup">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>com.google.protobuf.MessageLite$Builder</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ resetSizeCounter -->
      <method abstract="yes" access="public" name="resetSizeCounter">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setRecursionLimit -->
      <method access="public" final="yes" name="setRecursionLimit">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setSizeLimit -->
      <method access="public" final="yes" name="setSizeLimit">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ skipField -->
      <method abstract="yes" access="public" name="skipField">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ skipField -->
      <method abstract="yes" access="public" name="skipField">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>com.google.protobuf.CodedOutputStream</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ skipMessage -->
      <method abstract="yes" access="public" name="skipMessage">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ skipMessage -->
      <method abstract="yes" access="public" name="skipMessage">
        <signature>
          <arg nr="1">
            <object>com.google.protobuf.CodedOutputStream</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ skipRawBytes -->
      <method abstract="yes" access="public" name="skipRawBytes">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2019, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
