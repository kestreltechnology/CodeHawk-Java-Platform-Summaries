<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2019-01-14 17:36:35"/>
  <class abstract="yes" name="Parser" package="org.antlr.v4.runtime">
    <superclass>org.antlr.v4.runtime.Recognizer</superclass>
    <interfaces/>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (org.antlr.v4.runtime.TokenStream) -->
      <method access="public">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.TokenStream</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ addContextToParseTree -->
      <method access="protected" name="addContextToParseTree">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ addParseListener -->
      <method access="public" name="addParseListener">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.tree.ParseTreeListener</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ compileParseTreePattern -->
      <method access="public" name="compileParseTreePattern">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <object>org.antlr.v4.runtime.tree.pattern.ParseTreePattern</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ compileParseTreePattern -->
      <method access="public" name="compileParseTreePattern">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <object>org.antlr.v4.runtime.Lexer</object>
          </arg>
          <return>
            <object>org.antlr.v4.runtime.tree.pattern.ParseTreePattern</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ consume -->
      <method access="public" name="consume">
        <signature>
          <return>
            <object>org.antlr.v4.runtime.Token</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ dumpDFA -->
      <method access="public" name="dumpDFA">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ enterOuterAlt -->
      <method access="public" name="enterOuterAlt">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.ParserRuleContext</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ enterRecursionRule -->
      <method access="public" name="enterRecursionRule">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.ParserRuleContext</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ enterRecursionRule -->
      <method access="public" name="enterRecursionRule">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.ParserRuleContext</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ enterRule -->
      <method access="public" name="enterRule">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.ParserRuleContext</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ exitRule -->
      <method access="public" name="exitRule">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getATNWithBypassAlts -->
      <method access="public" name="getATNWithBypassAlts">
        <signature>
          <return>
            <object>org.antlr.v4.runtime.atn.ATN</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getBuildParseTree -->
      <method access="public" name="getBuildParseTree">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getContext -->
      <method access="public" name="getContext">
        <signature>
          <return>
            <object>org.antlr.v4.runtime.ParserRuleContext</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getCurrentToken -->
      <method access="public" name="getCurrentToken">
        <signature>
          <return>
            <object>org.antlr.v4.runtime.Token</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDFAStrings -->
      <method access="public" name="getDFAStrings">
        <signature>
          <return>
            <object>java.util.List</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getErrorHandler -->
      <method access="public" name="getErrorHandler">
        <signature>
          <return>
            <object>org.antlr.v4.runtime.ANTLRErrorStrategy</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getExpectedTokens -->
      <method access="public" name="getExpectedTokens">
        <signature>
          <return>
            <object>org.antlr.v4.runtime.misc.IntervalSet</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getExpectedTokensWithinCurrentRule -->
      <method access="public" name="getExpectedTokensWithinCurrentRule">
        <signature>
          <return>
            <object>org.antlr.v4.runtime.misc.IntervalSet</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getInputStream -->
      <method access="public" name="getInputStream">
        <signature>
          <return>
            <object>org.antlr.v4.runtime.TokenStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getInputStream -->
      <method access="public" bridge="yes" name="getInputStream">
        <signature>
          <return>
            <object>org.antlr.v4.runtime.IntStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getInvokingContext -->
      <method access="public" name="getInvokingContext">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>org.antlr.v4.runtime.ParserRuleContext</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getNumberOfSyntaxErrors -->
      <method access="public" name="getNumberOfSyntaxErrors">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getParseInfo -->
      <method access="public" name="getParseInfo">
        <signature>
          <return>
            <object>org.antlr.v4.runtime.atn.ParseInfo</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getParseListeners -->
      <method access="public" name="getParseListeners">
        <signature>
          <return>
            <object>java.util.List</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getPrecedence -->
      <method access="public" final="yes" name="getPrecedence">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getRuleContext -->
      <method access="public" name="getRuleContext">
        <signature>
          <return>
            <object>org.antlr.v4.runtime.ParserRuleContext</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getRuleIndex -->
      <method access="public" name="getRuleIndex">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getRuleInvocationStack -->
      <method access="public" name="getRuleInvocationStack">
        <signature>
          <return>
            <object>java.util.List</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getRuleInvocationStack -->
      <method access="public" name="getRuleInvocationStack">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.RuleContext</object>
          </arg>
          <return>
            <object>java.util.List</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getSourceName -->
      <method access="public" name="getSourceName">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getTokenFactory -->
      <method access="public" name="getTokenFactory">
        <signature>
          <return>
            <object>org.antlr.v4.runtime.TokenFactory</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getTokenStream -->
      <method access="public" name="getTokenStream">
        <signature>
          <return>
            <object>org.antlr.v4.runtime.TokenStream</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getTrimParseTree -->
      <method access="public" name="getTrimParseTree">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ inContext -->
      <method access="public" name="inContext">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isExpectedToken -->
      <method access="public" name="isExpectedToken">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isTrace -->
      <method access="public" name="isTrace">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ match -->
      <method access="public" name="match">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>org.antlr.v4.runtime.Token</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ matchWildcard -->
      <method access="public" name="matchWildcard">
        <signature>
          <return>
            <object>org.antlr.v4.runtime.Token</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ notifyErrorListeners -->
      <method access="public" final="yes" name="notifyErrorListeners">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ notifyErrorListeners -->
      <method access="public" name="notifyErrorListeners">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.Token</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>org.antlr.v4.runtime.RecognitionException</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ precpred -->
      <method access="public" name="precpred">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.RuleContext</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pushNewRecursionContext -->
      <method access="public" name="pushNewRecursionContext">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.ParserRuleContext</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ removeParseListener -->
      <method access="public" name="removeParseListener">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.tree.ParseTreeListener</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ removeParseListeners -->
      <method access="public" name="removeParseListeners">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ reset -->
      <method access="public" name="reset">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setBuildParseTree -->
      <method access="public" name="setBuildParseTree">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setContext -->
      <method access="public" name="setContext">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.ParserRuleContext</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setErrorHandler -->
      <method access="public" name="setErrorHandler">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.ANTLRErrorStrategy</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setInputStream -->
      <method access="public" final="yes" name="setInputStream">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.IntStream</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setProfile -->
      <method access="public" name="setProfile">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setTokenFactory -->
      <method access="public" name="setTokenFactory">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.TokenFactory</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setTokenStream -->
      <method access="public" name="setTokenStream">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.TokenStream</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setTrace -->
      <method access="public" name="setTrace">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setTrimParseTree -->
      <method access="public" name="setTrimParseTree">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ triggerEnterRuleEvent -->
      <method access="protected" name="triggerEnterRuleEvent">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ triggerExitRuleEvent -->
      <method access="protected" name="triggerExitRuleEvent">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ unrollRecursionContexts -->
      <method access="public" name="unrollRecursionContexts">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.ParserRuleContext</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2019, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
