<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2019-01-14 17:41:06"/>
  <class final="yes" name="PredictionMode" package="org.antlr.v4.runtime.atn">
    <superclass>java.lang.Enum</superclass>
    <interfaces>
      <implements>java.lang.Comparable</implements>
      <implements>java.io.Serializable</implements>
    </interfaces>
    <!-- =============================== FIELDS ===============================  -->
    <fields>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:SLL -->
      <field access="public" final="yes" name="SLL" not-null="yes" static="yes">
        <signature>
          <object>org.antlr.v4.runtime.atn.PredictionMode</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:LL -->
      <field access="public" final="yes" name="LL" not-null="yes" static="yes">
        <signature>
          <object>org.antlr.v4.runtime.atn.PredictionMode</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:LL_EXACT_AMBIG_DETECTION -->
      <field access="public" final="yes" name="LL_EXACT_AMBIG_DETECTION" not-null="yes" static="yes">
        <signature>
          <object>org.antlr.v4.runtime.atn.PredictionMode</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:$VALUES -->
      <field access="private" final="yes" name="$VALUES" not-null="yes" static="yes">
        <signature>
          <array>
            <object>org.antlr.v4.runtime.atn.PredictionMode</object>
          </array>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) field:ordinal -->
      <field from="java.lang.Enum" inherited="yes" name="ordinal">
        <signature>
          <int/>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) field:name -->
      <field from="java.lang.Enum" inherited="yes" name="name">
        <signature>
          <object>java.lang.String</object>
        </signature>
      </field>
    </fields>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.String,int) -->
      <method access="private" instrs="5" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ allConfigsInRuleStopStates -->
      <method access="public" instrs="19" name="allConfigsInRuleStopStates" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.atn.ATNConfigSet</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ allSubsetsConflict -->
      <method access="public" instrs="7" name="allSubsetsConflict" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Collection</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ allSubsetsEqual -->
      <method access="public" instrs="23" name="allSubsetsEqual" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Collection</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getAlts -->
      <method access="public" instrs="20" name="getAlts" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Collection</object>
          </arg>
          <return>
            <object>java.util.BitSet</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getConflictingAltSubsets -->
      <method access="public" instrs="38" name="getConflictingAltSubsets" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.atn.ATNConfigSet</object>
          </arg>
          <return>
            <object>java.util.Collection</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getSingleViableAlt -->
      <method access="public" instrs="32" name="getSingleViableAlt" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Collection</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getStateToAltMap -->
      <method access="public" instrs="39" name="getStateToAltMap" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.atn.ATNConfigSet</object>
          </arg>
          <return>
            <object>java.util.Map</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getUniqueAlt -->
      <method access="public" instrs="13" name="getUniqueAlt" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Collection</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ hasConfigInRuleStopState -->
      <method access="public" instrs="19" name="hasConfigInRuleStopState" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.atn.ATNConfigSet</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ hasConflictingAltSet -->
      <method access="public" instrs="19" name="hasConflictingAltSet" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Collection</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ hasNonConflictingAltSet -->
      <method access="public" instrs="19" name="hasNonConflictingAltSet" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Collection</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ hasSLLConflictTerminatingPrediction -->
      <method access="public" instrs="53" name="hasSLLConflictTerminatingPrediction" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.atn.PredictionMode</object>
          </arg>
          <arg nr="2">
            <object>org.antlr.v4.runtime.atn.ATNConfigSet</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ hasStateAssociatedWithOneAlt -->
      <method access="public" instrs="23" name="hasStateAssociatedWithOneAlt" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>org.antlr.v4.runtime.atn.ATNConfigSet</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ resolvesToJustOneViableAlt -->
      <method access="public" instrs="3" name="resolvesToJustOneViableAlt" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Collection</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ valueOf -->
      <method access="public" instrs="5" name="valueOf" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>org.antlr.v4.runtime.atn.PredictionMode</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ values -->
      <method access="public" instrs="4" name="values" static="yes" valid="no">
        <signature>
          <return>
            <array>
              <object>org.antlr.v4.runtime.atn.PredictionMode</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2019, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
