<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2019-01-15 22:14:02"/>
  <class abstract="yes" name="NanoHTTPD" package="fi.iki.elonen">
    <interfaces/>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (int) -->
      <method access="public">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.String,int) -->
      <method access="public">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ access$000 -->
      <method access="default" name="access$000" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ access$100 -->
      <method access="default" name="access$100" static="yes">
        <signature>
          <arg nr="1">
            <object>fi.iki.elonen.NanoHTTPD</object>
          </arg>
          <return>
            <object>fi.iki.elonen.NanoHTTPD$TempFileManagerFactory</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ access$1000 -->
      <method access="default" name="access$1000" static="yes">
        <signature>
          <arg nr="1">
            <object>fi.iki.elonen.NanoHTTPD</object>
          </arg>
          <return>
            <object>java.net.ServerSocket</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ access$200 -->
      <method access="default" name="access$200" static="yes">
        <signature>
          <return>
            <object>java.util.logging.Logger</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ access$300 -->
      <method access="default" name="access$300" static="yes">
        <signature>
          <return>
            <object>java.util.regex.Pattern</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ access$400 -->
      <method access="default" name="access$400" static="yes">
        <signature>
          <return>
            <object>java.util.regex.Pattern</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ access$500 -->
      <method access="default" name="access$500" static="yes">
        <signature>
          <return>
            <object>java.util.regex.Pattern</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ access$600 -->
      <method access="default" name="access$600" static="yes">
        <signature>
          <return>
            <object>java.util.regex.Pattern</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ access$700 -->
      <method access="default" name="access$700" static="yes">
        <signature>
          <return>
            <object>java.util.regex.Pattern</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ access$800 -->
      <method access="default" name="access$800" static="yes">
        <signature>
          <arg nr="1">
            <object>fi.iki.elonen.NanoHTTPD</object>
          </arg>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ access$900 -->
      <method access="default" name="access$900" static="yes">
        <signature>
          <arg nr="1">
            <object>fi.iki.elonen.NanoHTTPD</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ closeAllConnections -->
      <method access="public" name="closeAllConnections">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createClientHandler -->
      <method access="protected" name="createClientHandler">
        <signature>
          <arg nr="1">
            <object>java.net.Socket</object>
          </arg>
          <arg nr="2">
            <object>java.io.InputStream</object>
          </arg>
          <return>
            <object>fi.iki.elonen.NanoHTTPD$ClientHandler</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createServerRunnable -->
      <method access="protected" name="createServerRunnable">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>fi.iki.elonen.NanoHTTPD$ServerRunnable</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ decodeParameters -->
      <method access="protected" name="decodeParameters" static="yes">
        <signature>
          <arg nr="1">
            <object>java.util.Map</object>
          </arg>
          <return>
            <object>java.util.Map</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ decodeParameters -->
      <method access="protected" name="decodeParameters" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.util.Map</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ decodePercent -->
      <method access="protected" name="decodePercent" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getHostname -->
      <method access="public" name="getHostname">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getListeningPort -->
      <method access="public" final="yes" name="getListeningPort">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getMimeTypeForFile -->
      <method access="public" name="getMimeTypeForFile" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getServerSocketFactory -->
      <method access="public" name="getServerSocketFactory">
        <signature>
          <return>
            <object>fi.iki.elonen.NanoHTTPD$ServerSocketFactory</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getTempFileManagerFactory -->
      <method access="public" name="getTempFileManagerFactory">
        <signature>
          <return>
            <object>fi.iki.elonen.NanoHTTPD$TempFileManagerFactory</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isAlive -->
      <method access="public" final="yes" name="isAlive">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ loadMimeTypes -->
      <method access="private" name="loadMimeTypes" static="yes">
        <signature>
          <arg nr="1">
            <object>java.util.Map</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ makeSSLSocketFactory -->
      <method access="public" name="makeSSLSocketFactory" static="yes">
        <signature>
          <arg nr="1">
            <object>java.security.KeyStore</object>
          </arg>
          <arg nr="2">
            <array>
              <object>javax.net.ssl.KeyManager</object>
            </array>
          </arg>
          <return>
            <object>javax.net.ssl.SSLServerSocketFactory</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ makeSSLSocketFactory -->
      <method access="public" name="makeSSLSocketFactory" static="yes">
        <signature>
          <arg nr="1">
            <object>java.security.KeyStore</object>
          </arg>
          <arg nr="2">
            <object>javax.net.ssl.KeyManagerFactory</object>
          </arg>
          <return>
            <object>javax.net.ssl.SSLServerSocketFactory</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ makeSSLSocketFactory -->
      <method access="public" name="makeSSLSocketFactory" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <array>
              <char/>
            </array>
          </arg>
          <return>
            <object>javax.net.ssl.SSLServerSocketFactory</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ makeSecure -->
      <method access="public" name="makeSecure">
        <signature>
          <arg nr="1">
            <object>javax.net.ssl.SSLServerSocketFactory</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.lang.String</object>
            </array>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ mimeTypes -->
      <method access="public" name="mimeTypes" static="yes">
        <signature>
          <return>
            <object>java.util.Map</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newChunkedResponse -->
      <method access="public" name="newChunkedResponse" static="yes">
        <signature>
          <arg nr="1">
            <object>fi.iki.elonen.NanoHTTPD$Response$IStatus</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>java.io.InputStream</object>
          </arg>
          <return>
            <object>fi.iki.elonen.NanoHTTPD$Response</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newFixedLengthResponse -->
      <method access="public" name="newFixedLengthResponse" static="yes">
        <signature>
          <arg nr="1">
            <object>fi.iki.elonen.NanoHTTPD$Response$IStatus</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>java.io.InputStream</object>
          </arg>
          <arg nr="4">
            <long/>
          </arg>
          <return>
            <object>fi.iki.elonen.NanoHTTPD$Response</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newFixedLengthResponse -->
      <method access="public" name="newFixedLengthResponse" static="yes">
        <signature>
          <arg nr="1">
            <object>fi.iki.elonen.NanoHTTPD$Response$IStatus</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>fi.iki.elonen.NanoHTTPD$Response</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ newFixedLengthResponse -->
      <method access="public" name="newFixedLengthResponse" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>fi.iki.elonen.NanoHTTPD$Response</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ safeClose -->
      <method access="private" final="yes" name="safeClose" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ serve -->
      <method access="public" name="serve">
        <signature>
          <arg nr="1">
            <object>fi.iki.elonen.NanoHTTPD$IHTTPSession</object>
          </arg>
          <return>
            <object>fi.iki.elonen.NanoHTTPD$Response</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ serve -->
      <method access="public" name="serve">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <object>fi.iki.elonen.NanoHTTPD$Method</object>
          </arg>
          <arg nr="3">
            <object>java.util.Map</object>
          </arg>
          <arg nr="4">
            <object>java.util.Map</object>
          </arg>
          <arg nr="5">
            <object>java.util.Map</object>
          </arg>
          <return>
            <object>fi.iki.elonen.NanoHTTPD$Response</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setAsyncRunner -->
      <method access="public" name="setAsyncRunner">
        <signature>
          <arg nr="1">
            <object>fi.iki.elonen.NanoHTTPD$AsyncRunner</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setServerSocketFactory -->
      <method access="public" name="setServerSocketFactory">
        <signature>
          <arg nr="1">
            <object>fi.iki.elonen.NanoHTTPD$ServerSocketFactory</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setTempFileManagerFactory -->
      <method access="public" name="setTempFileManagerFactory">
        <signature>
          <arg nr="1">
            <object>fi.iki.elonen.NanoHTTPD$TempFileManagerFactory</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ start -->
      <method access="public" name="start">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ start -->
      <method access="public" name="start">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ start -->
      <method access="public" name="start">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stop -->
      <method access="public" name="stop">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ useGzipWhenAccepted -->
      <method access="protected" name="useGzipWhenAccepted">
        <signature>
          <arg nr="1">
            <object>fi.iki.elonen.NanoHTTPD$Response</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ wasStarted -->
      <method access="public" final="yes" name="wasStarted">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2019, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
