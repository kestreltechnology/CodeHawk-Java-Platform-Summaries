<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2019-01-17 18:50:43"/>
  <class name="TestSuite" package="junit.framework">
    <interfaces>
      <implements>junit.framework.Test</implements>
    </interfaces>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ () -->
      <method access="public">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.Class) -->
      <method access="public">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.Class,java.lang.String) -->
      <method access="public">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.String) -->
      <method access="public">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.Class[]) -->
      <method access="public">
        <signature>
          <arg nr="1">
            <array>
              <object>java.lang.Class</object>
            </array>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.Class[],java.lang.String) -->
      <method access="public">
        <signature>
          <arg nr="1">
            <array>
              <object>java.lang.Class</object>
            </array>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ addTest -->
      <method access="public" name="addTest">
        <signature>
          <arg nr="1">
            <object>junit.framework.Test</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ addTestMethod -->
      <method access="private" name="addTestMethod">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Method</object>
          </arg>
          <arg nr="2">
            <object>java.util.List</object>
          </arg>
          <arg nr="3">
            <object>java.lang.Class</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ addTestSuite -->
      <method access="public" name="addTestSuite">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ addTestsFromTestCase -->
      <method access="private" name="addTestsFromTestCase">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ countTestCases -->
      <method access="public" name="countTestCases">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createTest -->
      <method access="public" name="createTest" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>junit.framework.Test</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ exceptionToString -->
      <method access="private" name="exceptionToString" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Throwable</object>
          </arg>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getName -->
      <method access="public" name="getName">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getTestConstructor -->
      <method access="public" name="getTestConstructor" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>java.lang.reflect.Constructor</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isPublicTestMethod -->
      <method access="private" name="isPublicTestMethod">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Method</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isTestMethod -->
      <method access="private" name="isTestMethod">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Method</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ run -->
      <method access="public" name="run">
        <signature>
          <arg nr="1">
            <object>junit.framework.TestResult</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ runTest -->
      <method access="public" name="runTest">
        <signature>
          <arg nr="1">
            <object>junit.framework.Test</object>
          </arg>
          <arg nr="2">
            <object>junit.framework.TestResult</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setName -->
      <method access="public" name="setName">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ testAt -->
      <method access="public" name="testAt">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>junit.framework.Test</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ testCaseForClass -->
      <method access="private" name="testCaseForClass">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>junit.framework.Test</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ testCount -->
      <method access="public" name="testCount">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ tests -->
      <method access="public" name="tests">
        <signature>
          <return>
            <object>java.util.Enumeration</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toString -->
      <method access="public" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ warning -->
      <method access="public" name="warning" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <object>junit.framework.Test</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2019, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
