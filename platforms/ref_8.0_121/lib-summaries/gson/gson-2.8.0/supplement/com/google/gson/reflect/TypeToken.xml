<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2019-01-15 11:06:24"/>
  <class name="TypeToken" package="com.google.gson.reflect">
    <interfaces/>
    <!-- =============================== FIELDS ===============================  -->
    <fields>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:rawType -->
      <field access="default" final="yes" name="rawType">
        <signature>
          <object>java.lang.Class</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:type -->
      <field access="default" final="yes" name="type">
        <signature>
          <object>java.lang.reflect.Type</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:hashCode -->
      <field access="default" final="yes" name="hashCode">
        <signature>
          <int/>
        </signature>
      </field>
    </fields>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ () -->
      <method access="protected" instrs="18" valid="no">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.reflect.Type) -->
      <method access="default" instrs="19" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Type</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ buildUnexpectedTypeError -->
      <method access="private" instrs="49" name="buildUnexpectedTypeError" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Type</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.lang.Class</object>
            </array>
          </arg>
          <return>
            <object>java.lang.AssertionError</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ equals -->
      <method access="public" final="yes" instrs="14" name="equals" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ get -->
      <method access="public" instrs="5" name="get" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Type</object>
          </arg>
          <return>
            <object>com.google.gson.reflect.TypeToken</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ get -->
      <method access="public" instrs="5" name="get" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>com.google.gson.reflect.TypeToken</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getArray -->
      <method access="public" instrs="6" name="getArray" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Type</object>
          </arg>
          <return>
            <object>com.google.gson.reflect.TypeToken</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getParameterized -->
      <method access="public" instrs="8" name="getParameterized" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Type</object>
          </arg>
          <arg nr="2">
            <array>
              <object>java.lang.reflect.Type</object>
            </array>
          </arg>
          <return>
            <object>com.google.gson.reflect.TypeToken</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getRawType -->
      <method access="public" final="yes" instrs="3" name="getRawType" valid="no">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getSuperclassTypeParameter -->
      <method access="default" instrs="20" name="getSuperclassTypeParameter" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <object>java.lang.reflect.Type</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getType -->
      <method access="public" final="yes" instrs="3" name="getType" valid="no">
        <signature>
          <return>
            <object>java.lang.reflect.Type</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ hashCode -->
      <method access="public" final="yes" instrs="3" name="hashCode" valid="no">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isAssignableFrom -->
      <method access="public" instrs="4" name="isAssignableFrom" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isAssignableFrom -->
      <method access="public" instrs="72" name="isAssignableFrom" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Type</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isAssignableFrom -->
      <method access="public" instrs="5" name="isAssignableFrom" valid="no">
        <signature>
          <arg nr="1">
            <object>com.google.gson.reflect.TypeToken</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isAssignableFrom -->
      <method access="private" instrs="41" name="isAssignableFrom" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Type</object>
          </arg>
          <arg nr="2">
            <object>java.lang.reflect.GenericArrayType</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isAssignableFrom -->
      <method access="private" instrs="109" name="isAssignableFrom" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Type</object>
          </arg>
          <arg nr="2">
            <object>java.lang.reflect.ParameterizedType</object>
          </arg>
          <arg nr="3">
            <object>java.util.Map</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ matches -->
      <method access="private" instrs="19" name="matches" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.Type</object>
          </arg>
          <arg nr="2">
            <object>java.lang.reflect.Type</object>
          </arg>
          <arg nr="3">
            <object>java.util.Map</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toString -->
      <method access="public" final="yes" instrs="4" name="toString" valid="no">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ typeEquals -->
      <method access="private" instrs="35" name="typeEquals" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.reflect.ParameterizedType</object>
          </arg>
          <arg nr="2">
            <object>java.lang.reflect.ParameterizedType</object>
          </arg>
          <arg nr="3">
            <object>java.util.Map</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2019, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
