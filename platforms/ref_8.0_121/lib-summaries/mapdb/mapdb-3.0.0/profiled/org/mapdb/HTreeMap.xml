<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2019-01-17 15:06:57"/>
  <class final="yes" name="HTreeMap" package="org.mapdb">
    <interfaces>
      <implements>java.util.concurrent.ConcurrentMap</implements>
      <implements>org.mapdb.ConcurrencyAware</implements>
      <implements>org.mapdb.MapExtra</implements>
      <implements>org.mapdb.Verifiable</implements>
      <implements>java.io.Closeable</implements>
      <implements>java.util.Map</implements>
      <implements>java.lang.AutoCloseable</implements>
    </interfaces>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!--  (org.mapdb.Serializer,org.mapdb.Serializer,boolean,int,int,int,org.mapdb.Store[],org.eclipse.collections.api.map.primitive.MutableLongLongMap[],int,long[],long,long,long,long,long,org.mapdb.QueueLong[],org.mapdb.QueueLong[],org.mapdb.QueueLong[],java.util.concurrent.ScheduledExecutorService,long,java.lang.Double,boolean,kotlin.jvm.functions.Function1,org.mapdb.MapModificationListener[],java.io.Closeable,boolean) -->
      <method access="public">
        <signature>
          <arg nr="1">
            <object>org.mapdb.Serializer</object>
          </arg>
          <arg nr="2">
            <object>org.mapdb.Serializer</object>
          </arg>
          <arg nr="3">
            <boolean/>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
          <arg nr="5">
            <int/>
          </arg>
          <arg nr="6">
            <int/>
          </arg>
          <arg nr="7">
            <array>
              <object>org.mapdb.Store</object>
            </array>
          </arg>
          <arg nr="8">
            <array>
              <object>org.eclipse.collections.api.map.primitive.MutableLongLongMap</object>
            </array>
          </arg>
          <arg nr="9">
            <int/>
          </arg>
          <arg nr="10">
            <array>
              <long/>
            </array>
          </arg>
          <arg nr="11">
            <long/>
          </arg>
          <arg nr="12">
            <long/>
          </arg>
          <arg nr="13">
            <long/>
          </arg>
          <arg nr="14">
            <long/>
          </arg>
          <arg nr="15">
            <long/>
          </arg>
          <arg nr="16">
            <array>
              <object>org.mapdb.QueueLong</object>
            </array>
          </arg>
          <arg nr="17">
            <array>
              <object>org.mapdb.QueueLong</object>
            </array>
          </arg>
          <arg nr="18">
            <array>
              <object>org.mapdb.QueueLong</object>
            </array>
          </arg>
          <arg nr="19">
            <object>java.util.concurrent.ScheduledExecutorService</object>
          </arg>
          <arg nr="20">
            <long/>
          </arg>
          <arg nr="21">
            <object>java.lang.Double</object>
          </arg>
          <arg nr="22">
            <boolean/>
          </arg>
          <arg nr="23">
            <object>kotlin.jvm.functions.Function1</object>
          </arg>
          <arg nr="24">
            <array>
              <object>org.mapdb.MapModificationListener</object>
            </array>
          </arg>
          <arg nr="25">
            <object>java.io.Closeable</object>
          </arg>
          <arg nr="26">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!--  (org.mapdb.Serializer,org.mapdb.Serializer,boolean,int,int,int,org.mapdb.Store[],org.eclipse.collections.api.map.primitive.MutableLongLongMap[],int,long[],long,long,long,long,long,org.mapdb.QueueLong[],org.mapdb.QueueLong[],org.mapdb.QueueLong[],java.util.concurrent.ScheduledExecutorService,long,java.lang.Double,boolean,kotlin.jvm.functions.Function1,org.mapdb.MapModificationListener[],java.io.Closeable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -->
      <method access="public">
        <signature>
          <arg nr="1">
            <object>org.mapdb.Serializer</object>
          </arg>
          <arg nr="2">
            <object>org.mapdb.Serializer</object>
          </arg>
          <arg nr="3">
            <boolean/>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
          <arg nr="5">
            <int/>
          </arg>
          <arg nr="6">
            <int/>
          </arg>
          <arg nr="7">
            <array>
              <object>org.mapdb.Store</object>
            </array>
          </arg>
          <arg nr="8">
            <array>
              <object>org.eclipse.collections.api.map.primitive.MutableLongLongMap</object>
            </array>
          </arg>
          <arg nr="9">
            <int/>
          </arg>
          <arg nr="10">
            <array>
              <long/>
            </array>
          </arg>
          <arg nr="11">
            <long/>
          </arg>
          <arg nr="12">
            <long/>
          </arg>
          <arg nr="13">
            <long/>
          </arg>
          <arg nr="14">
            <long/>
          </arg>
          <arg nr="15">
            <long/>
          </arg>
          <arg nr="16">
            <array>
              <object>org.mapdb.QueueLong</object>
            </array>
          </arg>
          <arg nr="17">
            <array>
              <object>org.mapdb.QueueLong</object>
            </array>
          </arg>
          <arg nr="18">
            <array>
              <object>org.mapdb.QueueLong</object>
            </array>
          </arg>
          <arg nr="19">
            <object>java.util.concurrent.ScheduledExecutorService</object>
          </arg>
          <arg nr="20">
            <long/>
          </arg>
          <arg nr="21">
            <object>java.lang.Double</object>
          </arg>
          <arg nr="22">
            <boolean/>
          </arg>
          <arg nr="23">
            <object>kotlin.jvm.functions.Function1</object>
          </arg>
          <arg nr="24">
            <array>
              <object>org.mapdb.MapModificationListener</object>
            </array>
          </arg>
          <arg nr="25">
            <object>java.io.Closeable</object>
          </arg>
          <arg nr="26">
            <boolean/>
          </arg>
          <arg nr="27">
            <int/>
          </arg>
          <arg nr="28">
            <object>kotlin.jvm.internal.DefaultConstructorMarker</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ access$getHashSeed$p -->
      <method access="public" final="yes" name="access$getHashSeed$p" static="yes">
        <signature>
          <arg nr="1">
            <object>org.mapdb.HTreeMap</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ access$getLocks$p -->
      <method access="public" final="yes" name="access$getLocks$p" static="yes">
        <signature>
          <arg nr="1">
            <object>org.mapdb.HTreeMap</object>
          </arg>
          <return>
            <array>
              <object>java.util.concurrent.locks.ReadWriteLock</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ access$getSegmentCount$p -->
      <method access="public" final="yes" name="access$getSegmentCount$p" static="yes">
        <signature>
          <arg nr="1">
            <object>org.mapdb.HTreeMap</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ access$segmentWrite -->
      <method access="public" final="yes" name="access$segmentWrite" static="yes">
        <signature>
          <arg nr="1">
            <object>org.mapdb.HTreeMap</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <object>kotlin.jvm.functions.Function0</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ calculateCollisionSize -->
      <method access="public" final="yes" name="calculateCollisionSize">
        <signature>
          <return>
            <object>kotlin.Pair</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkThreadSafe -->
      <method access="public" name="checkThreadSafe">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ clear -->
      <method access="public" name="clear">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ clear -->
      <method access="protected" final="yes" name="clear">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ clear$default -->
      <method access="protected" bridge="yes" name="clear$default" static="yes">
        <signature>
          <arg nr="1">
            <object>org.mapdb.HTreeMap</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <object>java.lang.Object</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ clear2 -->
      <method access="public" final="yes" name="clear2">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ clear2$default -->
      <method access="public" bridge="yes" name="clear2$default" static="yes">
        <signature>
          <arg nr="1">
            <object>org.mapdb.HTreeMap</object>
          </arg>
          <arg nr="2">
            <boolean/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <object>java.lang.Object</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ clearWithExpire -->
      <method access="public" final="yes" name="clearWithExpire">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ clearWithoutNotification -->
      <method access="public" final="yes" name="clearWithoutNotification">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ close -->
      <method access="public" name="close">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ containsKey -->
      <method access="public" name="containsKey">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ containsValue -->
      <method access="public" name="containsValue">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ counter -->
      <method access="private" final="yes" name="counter">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ entrySet -->
      <method access="public" bridge="yes" final="yes" name="entrySet">
        <signature>
          <return>
            <object>java.util.Set</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ equals -->
      <method access="public" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expireEvict -->
      <method access="public" final="yes" name="expireEvict">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expireEvictEntry -->
      <method access="protected" final="yes" name="expireEvictEntry">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <arg nr="3">
            <long/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expireEvictSegment -->
      <method access="protected" final="yes" name="expireEvictSegment">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expireId -->
      <method access="protected" final="yes" name="expireId">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expireNodeRecidFor -->
      <method access="protected" final="yes" name="expireNodeRecidFor">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ expireQueueFor -->
      <method access="protected" final="yes" name="expireQueueFor">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <return>
            <object>org.mapdb.QueueLong</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ forEach -->
      <method access="public" name="forEach">
        <signature>
          <arg nr="1">
            <object>java.util.function.BiConsumer</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ forEachKey -->
      <method access="public" name="forEachKey">
        <signature>
          <arg nr="1">
            <object>kotlin.jvm.functions.Function1</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ forEachValue -->
      <method access="public" name="forEachValue">
        <signature>
          <arg nr="1">
            <object>kotlin.jvm.functions.Function1</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ get -->
      <method access="public" name="get">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getConcShift -->
      <method access="public" final="yes" name="getConcShift">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getCounterRecids -->
      <method access="public" final="yes" name="getCounterRecids">
        <signature>
          <return>
            <array>
              <long/>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDirShift -->
      <method access="public" final="yes" name="getDirShift">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getEntries -->
      <method access="public" name="getEntries">
        <signature>
          <return>
            <object>java.util.Set</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getExpireCompactThreshold -->
      <method access="public" final="yes" name="getExpireCompactThreshold">
        <signature>
          <return>
            <object>java.lang.Double</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getExpireCreateQueues -->
      <method access="public" final="yes" name="getExpireCreateQueues">
        <signature>
          <return>
            <array>
              <object>org.mapdb.QueueLong</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getExpireCreateTTL -->
      <method access="public" final="yes" name="getExpireCreateTTL">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getExpireExecutor -->
      <method access="public" final="yes" name="getExpireExecutor">
        <signature>
          <return>
            <object>java.util.concurrent.ScheduledExecutorService</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getExpireExecutorPeriod -->
      <method access="public" final="yes" name="getExpireExecutorPeriod">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getExpireGetQueues -->
      <method access="public" final="yes" name="getExpireGetQueues">
        <signature>
          <return>
            <array>
              <object>org.mapdb.QueueLong</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getExpireGetTTL -->
      <method access="public" final="yes" name="getExpireGetTTL">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getExpireMaxSize -->
      <method access="public" final="yes" name="getExpireMaxSize">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getExpireStoreSize -->
      <method access="public" final="yes" name="getExpireStoreSize">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getExpireUpdateQueues -->
      <method access="public" final="yes" name="getExpireUpdateQueues">
        <signature>
          <return>
            <array>
              <object>org.mapdb.QueueLong</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getExpireUpdateTTL -->
      <method access="public" final="yes" name="getExpireUpdateTTL">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getHasValues -->
      <method access="public" final="yes" name="getHasValues">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getIndexTrees -->
      <method access="public" final="yes" name="getIndexTrees">
        <signature>
          <return>
            <array>
              <object>org.eclipse.collections.api.map.primitive.MutableLongLongMap</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getKeySerializer -->
      <method access="public" name="getKeySerializer">
        <signature>
          <return>
            <object>org.mapdb.Serializer</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getKeys -->
      <method access="public" name="getKeys">
        <signature>
          <return>
            <object>org.mapdb.HTreeMap$KeySet</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getLeafSerializer -->
      <method access="protected" final="yes" name="getLeafSerializer">
        <signature>
          <return>
            <object>org.mapdb.Serializer</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getLevels -->
      <method access="public" final="yes" name="getLevels">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getLocks -->
      <method access="protected" final="yes" name="getLocks">
        <signature>
          <return>
            <array>
              <object>java.util.concurrent.locks.ReadWriteLock</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getSize -->
      <method access="public" name="getSize">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getStores -->
      <method access="public" final="yes" name="getStores">
        <signature>
          <return>
            <array>
              <object>org.mapdb.Store</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getValueInline -->
      <method access="public" final="yes" name="getValueInline">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getValueLoader -->
      <method access="public" final="yes" name="getValueLoader">
        <signature>
          <return>
            <object>kotlin.jvm.functions.Function1</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getValueSerializer -->
      <method access="public" name="getValueSerializer">
        <signature>
          <return>
            <object>org.mapdb.Serializer</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getValues -->
      <method access="public" name="getValues">
        <signature>
          <return>
            <object>java.util.Collection</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getprotected -->
      <method access="protected" final="yes" name="getprotected">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="3">
            <boolean/>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getprotectedQueues -->
      <method access="private" final="yes" name="getprotectedQueues">
        <signature>
          <arg nr="1">
            <array>
              <object>org.mapdb.QueueLong</object>
            </array>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <array>
              <object>java.lang.Object</object>
            </array>
          </arg>
          <arg nr="4">
            <long/>
          </arg>
          <arg nr="5">
            <int/>
          </arg>
          <arg nr="6">
            <object>org.mapdb.Store</object>
          </arg>
          <return>
            <array>
              <object>java.lang.Object</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ hash -->
      <method access="protected" final="yes" name="hash">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ hashCode -->
      <method access="public" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ hashToIndex -->
      <method access="protected" final="yes" name="hashToIndex">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ hashToSegment -->
      <method access="protected" final="yes" name="hashToSegment">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ htreeEntry -->
      <method access="protected" final="yes" name="htreeEntry">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.util.Map$Entry</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ htreeIterator -->
      <method access="protected" final="yes" name="htreeIterator">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>kotlin.jvm.functions.Function2</object>
          </arg>
          <return>
            <object>java.util.Iterator</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isClosed -->
      <method access="public" name="isClosed">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isEmpty -->
      <method access="public" name="isEmpty">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isForegroundEviction -->
      <method access="public" final="yes" name="isForegroundEviction">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isThreadSafe -->
      <method access="public" name="isThreadSafe">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ keySet -->
      <method access="public" bridge="yes" final="yes" name="keySet">
        <signature>
          <return>
            <object>java.util.Set</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ leafGet -->
      <method access="protected" final="yes" name="leafGet">
        <signature>
          <arg nr="1">
            <object>org.mapdb.Store</object>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <return>
            <array>
              <object>java.lang.Object</object>
            </array>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ leafKeySetSerializer -->
      <method access="private" final="yes" name="leafKeySetSerializer">
        <signature>
          <return>
            <object>org.mapdb.HTreeMap$leafKeySetSerializer$1</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ leafValueExternalSerializer -->
      <method access="private" final="yes" name="leafValueExternalSerializer">
        <signature>
          <return>
            <object>org.mapdb.HTreeMap$leafValueExternalSerializer$1</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ leafValueInlineSerializer -->
      <method access="private" final="yes" name="leafValueInlineSerializer">
        <signature>
          <return>
            <object>org.mapdb.HTreeMap$leafValueInlineSerializer$1</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ listenerNotify -->
      <method access="protected" final="yes" name="listenerNotify">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="3">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="4">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ put -->
      <method access="public" name="put">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putAll -->
      <method access="public" name="putAll">
        <signature>
          <arg nr="1">
            <object>java.util.Map</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putIfAbsent -->
      <method access="public" name="putIfAbsent">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putIfAbsentBoolean -->
      <method access="public" name="putIfAbsentBoolean">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putprotected -->
      <method access="protected" final="yes" name="putprotected">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="3">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="4">
            <boolean/>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ remove -->
      <method access="public" name="remove">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ remove -->
      <method access="public" name="remove">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ removeprotected -->
      <method access="protected" final="yes" name="removeprotected">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="3">
            <boolean/>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ replace -->
      <method access="public" name="replace">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="3">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ replace -->
      <method access="public" name="replace">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ segmentRead -->
      <method access="private" final="yes" name="segmentRead">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>kotlin.jvm.functions.Function0</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ segmentWrite -->
      <method access="private" final="yes" name="segmentWrite">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>kotlin.jvm.functions.Function0</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ size -->
      <method access="public" bridge="yes" final="yes" name="size">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sizeLong -->
      <method access="public" name="sizeLong">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ valueUnwrap -->
      <method access="protected" final="yes" name="valueUnwrap">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ valueWrap -->
      <method access="protected" final="yes" name="valueWrap">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ values -->
      <method access="public" bridge="yes" final="yes" name="values">
        <signature>
          <return>
            <object>java.util.Collection</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ verify -->
      <method access="public" name="verify">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2019, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
