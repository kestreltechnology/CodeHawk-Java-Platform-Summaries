<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2019-01-17 15:37:46"/>
  <class abstract="yes" name="Volume" package="org.mapdb.volume">
    <interfaces>
      <implements>java.io.Closeable</implements>
      <implements>java.lang.AutoCloseable</implements>
    </interfaces>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ () -->
      <method access="public">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ assertZeroes -->
      <method access="public" name="assertZeroes">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ clear -->
      <method abstract="yes" access="public" name="clear">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ clearOverlap -->
      <method access="public" name="clearOverlap">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ close -->
      <method abstract="yes" access="public" name="close">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ copyFrom -->
      <method access="public" name="copyFrom">
        <signature>
          <arg nr="1">
            <object>java.io.InputStream</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ copyTo -->
      <method access="public" name="copyTo">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <object>org.mapdb.volume.Volume</object>
          </arg>
          <arg nr="3">
            <long/>
          </arg>
          <arg nr="4">
            <long/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ copyTo -->
      <method access="public" name="copyTo">
        <signature>
          <arg nr="1">
            <object>org.mapdb.volume.Volume</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ copyTo -->
      <method access="public" name="copyTo">
        <signature>
          <arg nr="1">
            <object>java.io.OutputStream</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ deleteFile -->
      <method access="public" name="deleteFile">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ensureAvailable -->
      <method abstract="yes" access="public" name="ensureAvailable">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ fileLoad -->
      <method access="public" name="fileLoad">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ finalize -->
      <method access="protected" name="finalize">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getByte -->
      <method abstract="yes" access="public" name="getByte">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <byte/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getData -->
      <method abstract="yes" access="public" name="getData">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDataInput -->
      <method abstract="yes" access="public" name="getDataInput">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <object>org.mapdb.DataInput2</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getDataInputOverlap -->
      <method access="public" name="getDataInputOverlap">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <object>org.mapdb.DataInput2</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getFile -->
      <method abstract="yes" access="public" name="getFile">
        <signature>
          <return>
            <object>java.io.File</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getFileLocked -->
      <method abstract="yes" access="public" name="getFileLocked">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getInt -->
      <method abstract="yes" access="public" name="getInt">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getLong -->
      <method abstract="yes" access="public" name="getLong">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getPackedLong -->
      <method access="public" name="getPackedLong">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getSixLong -->
      <method access="public" name="getSixLong">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getUnsignedByte -->
      <method access="public" name="getUnsignedByte">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getUnsignedShort -->
      <method access="public" name="getUnsignedShort">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ hash -->
      <method access="public" name="hash">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <arg nr="3">
            <long/>
          </arg>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isClosed -->
      <method access="public" name="isClosed">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isEmptyFile -->
      <method access="default" name="isEmptyFile" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isReadOnly -->
      <method abstract="yes" access="public" name="isReadOnly">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isSliced -->
      <method abstract="yes" access="public" name="isSliced">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ length -->
      <method abstract="yes" access="public" name="length">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ lockFile -->
      <method access="default" name="lockFile" static="yes">
        <signature>
          <arg nr="1">
            <object>java.io.File</object>
          </arg>
          <arg nr="2">
            <object>java.nio.channels.FileChannel</object>
          </arg>
          <arg nr="3">
            <boolean/>
          </arg>
          <arg nr="4">
            <long/>
          </arg>
          <return>
            <object>java.nio.channels.FileLock</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putByte -->
      <method abstract="yes" access="public" name="putByte">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <byte/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putData -->
      <method abstract="yes" access="public" name="putData">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putData -->
      <method abstract="yes" access="public" name="putData">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <object>java.nio.ByteBuffer</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putDataOverlap -->
      <method access="public" name="putDataOverlap">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <array>
              <byte/>
            </array>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putInt -->
      <method abstract="yes" access="public" name="putInt">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putLong -->
      <method abstract="yes" access="public" name="putLong">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putPackedLong -->
      <method access="public" name="putPackedLong">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putSixLong -->
      <method access="public" name="putSixLong">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putUnsignedByte -->
      <method access="public" name="putUnsignedByte">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putUnsignedShort -->
      <method access="public" name="putUnsignedShort">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sliceShiftFromSize -->
      <method access="default" name="sliceShiftFromSize" static="yes">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sliceSize -->
      <method abstract="yes" access="public" name="sliceSize">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sync -->
      <method abstract="yes" access="public" name="sync">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ truncate -->
      <method abstract="yes" access="public" name="truncate">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2019, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
