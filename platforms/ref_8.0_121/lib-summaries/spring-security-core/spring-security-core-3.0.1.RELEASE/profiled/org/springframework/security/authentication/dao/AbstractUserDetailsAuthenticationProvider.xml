<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2019-01-29 10:45:25"/>
  <class abstract="yes" name="AbstractUserDetailsAuthenticationProvider" package="org.springframework.security.authentication.dao">
    <interfaces>
      <implements>org.springframework.security.authentication.AuthenticationProvider</implements>
      <implements>org.springframework.beans.factory.InitializingBean</implements>
      <implements>org.springframework.context.MessageSourceAware</implements>
      <implements>org.springframework.beans.factory.Aware</implements>
    </interfaces>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ () -->
      <constructor access="public">
        <signature/>
        <exceptions/>
        <summary/>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ additionalAuthenticationChecks -->
      <method abstract="yes" access="protected" name="additionalAuthenticationChecks">
        <signature>
          <arg nr="1">
            <object>org.springframework.security.core.userdetails.UserDetails</object>
          </arg>
          <arg nr="2">
            <object>org.springframework.security.authentication.UsernamePasswordAuthenticationToken</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ afterPropertiesSet -->
      <method access="public" final="yes" name="afterPropertiesSet">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ authenticate -->
      <method access="public" name="authenticate">
        <signature>
          <arg nr="1">
            <object>org.springframework.security.core.Authentication</object>
          </arg>
          <return>
            <object>org.springframework.security.core.Authentication</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createSuccessAuthentication -->
      <method access="protected" name="createSuccessAuthentication">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>org.springframework.security.core.Authentication</object>
          </arg>
          <arg nr="3">
            <object>org.springframework.security.core.userdetails.UserDetails</object>
          </arg>
          <return>
            <object>org.springframework.security.core.Authentication</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ doAfterPropertiesSet -->
      <method access="protected" name="doAfterPropertiesSet">
        <signature/>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getPostAuthenticationChecks -->
      <method access="protected" name="getPostAuthenticationChecks">
        <signature>
          <return>
            <object>org.springframework.security.core.userdetails.UserDetailsChecker</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getPreAuthenticationChecks -->
      <method access="protected" name="getPreAuthenticationChecks">
        <signature>
          <return>
            <object>org.springframework.security.core.userdetails.UserDetailsChecker</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getUserCache -->
      <method access="public" name="getUserCache">
        <signature>
          <return>
            <object>org.springframework.security.core.userdetails.UserCache</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isForcePrincipalAsString -->
      <method access="public" name="isForcePrincipalAsString">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isHideUserNotFoundExceptions -->
      <method access="public" name="isHideUserNotFoundExceptions">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ retrieveUser -->
      <method abstract="yes" access="protected" name="retrieveUser">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <object>org.springframework.security.authentication.UsernamePasswordAuthenticationToken</object>
          </arg>
          <return>
            <object>org.springframework.security.core.userdetails.UserDetails</object>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setForcePrincipalAsString -->
      <method access="public" name="setForcePrincipalAsString">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setHideUserNotFoundExceptions -->
      <method access="public" name="setHideUserNotFoundExceptions">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setMessageSource -->
      <method access="public" name="setMessageSource">
        <signature>
          <arg nr="1">
            <object>org.springframework.context.MessageSource</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setPostAuthenticationChecks -->
      <method access="public" name="setPostAuthenticationChecks">
        <signature>
          <arg nr="1">
            <object>org.springframework.security.core.userdetails.UserDetailsChecker</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setPreAuthenticationChecks -->
      <method access="public" name="setPreAuthenticationChecks">
        <signature>
          <arg nr="1">
            <object>org.springframework.security.core.userdetails.UserDetailsChecker</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ setUserCache -->
      <method access="public" name="setUserCache">
        <signature>
          <arg nr="1">
            <object>org.springframework.security.core.userdetails.UserCache</object>
          </arg>
        </signature>
        <exceptions/>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ supports -->
      <method access="public" name="supports">
        <signature>
          <arg nr="1">
            <object>java.lang.Class</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary/>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2019, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
