<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="interface" time="2019-01-17 13:23:22"/>
  <interface dispatch="yes" name="InvertedRadixTree" package="com.googlecode.concurrenttrees.radixinverted">
    <superinterfaces>
      <superinterface>com.googlecode.concurrenttrees.radix.RadixTree</superinterface>
    </superinterfaces>
    <!-- =============================== FIELDS ===============================  -->
    <fields/>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getKeyValuePairForLongestKeyPrefixing -->
      <method abstract="yes" access="public" name="getKeyValuePairForLongestKeyPrefixing" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>com.googlecode.concurrenttrees.common.KeyValuePair</object>
          </return>
        </signature>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getKeyValuePairsForKeysContainedIn -->
      <method abstract="yes" access="public" name="getKeyValuePairsForKeysContainedIn" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.Iterable</object>
          </return>
        </signature>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getKeyValuePairsForKeysPrefixing -->
      <method abstract="yes" access="public" name="getKeyValuePairsForKeysPrefixing" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.Iterable</object>
          </return>
        </signature>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getKeysContainedIn -->
      <method abstract="yes" access="public" name="getKeysContainedIn" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.Iterable</object>
          </return>
        </signature>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getKeysPrefixing -->
      <method abstract="yes" access="public" name="getKeysPrefixing" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.Iterable</object>
          </return>
        </signature>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getLongestKeyPrefixing -->
      <method abstract="yes" access="public" name="getLongestKeyPrefixing" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.CharSequence</object>
          </return>
        </signature>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getValueForExactKey -->
      <method abstract="yes" access="public" name="getValueForExactKey" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getValueForLongestKeyPrefixing -->
      <method abstract="yes" access="public" name="getValueForLongestKeyPrefixing" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getValuesForKeysContainedIn -->
      <method abstract="yes" access="public" name="getValuesForKeysContainedIn" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.Iterable</object>
          </return>
        </signature>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getValuesForKeysPrefixing -->
      <method abstract="yes" access="public" name="getValuesForKeysPrefixing" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.Iterable</object>
          </return>
        </signature>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ put -->
      <method abstract="yes" access="public" name="put" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ putIfAbsent -->
      <method abstract="yes" access="public" name="putIfAbsent" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ remove -->
      <method abstract="yes" access="public" name="remove" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <summary/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ size -->
      <method abstract="yes" access="public" name="size" valid="no">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <summary/>
      </method>
    </methods>
  </interface>
  <copyright-notice>Copyright 2012-2019, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
