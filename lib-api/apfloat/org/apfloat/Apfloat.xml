<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-03-25 18:58:38"/>
  <class name="Apfloat" immutable="yes" package="org.apfloat">
    <superclass>org.apfloat.Apcomplex</superclass>
    <interfaces>
      <implements>java.lang.Comparable</implements>
      <implements>java.util.Formattable</implements>
      <implements>java.io.Serializable</implements>
    </interfaces>
    <!-- =============================== FIELDS ===============================  -->
    <fields>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) field:DEFAULT -->
      <field from="org.apfloat.Apcomplex" inherited="yes" name="DEFAULT">
        <signature>
          <long/>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) field:INFINITE -->
      <field from="org.apfloat.Apcomplex" inherited="yes" name="INFINITE">
        <signature>
          <long/>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) field:I -->
      <field from="org.apfloat.Apcomplex" inherited="yes" name="I">
        <signature>
          <object>org.apfloat.Apcomplex</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) field:ONE -->
      <field from="org.apfloat.Apcomplex" inherited="yes" name="ONE">
        <signature>
          <object>org.apfloat.Apint</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) field:ZERO -->
      <field from="org.apfloat.Apcomplex" inherited="yes" name="ZERO">
        <signature>
          <object>org.apfloat.Apint</object>
        </signature>
      </field>
    </fields>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ () -->
      <constructor access="protected">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (org.apfloat.spi.ApfloatImpl) -->
      <constructor access="protected">
        <signature>
          <arg nr="1">
            <object>org.apfloat.spi.ApfloatImpl</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <this/>
	    </transfer>
	  </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.String) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <this/>
	    </transfer>
	  </taint>
	  <sinks>
	    <sink arg="1" dest="parse" form="number" type="string">
	      <throws>java.lang.NumberFormatException</throws>
	    </sink>
	  </sinks>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.String,long) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <this/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <this/>
	    </transfer>
	  </taint>
	  <sinks>
	    <sink arg="1" dest="parse" form="number" type="string">
	      <throws>java.lang.NumberFormatException</throws>
	    </sink>
	  </sinks>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.lang.String,long,int) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.lang.String</object>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <this/>
	    </transfer>
	    <transfer>
	      <arg nr="2"/>
	      <this/>
	    </transfer>
	    <transfer>
	      <arg nr="3"/>
	      <this/>
	    </transfer>
	  </taint>
	  <sinks>
	    <sink arg="1" dest="parse" form="number" type="string">
	      <throws>java.lang.NumberFormatException</throws>
	    </sink>
	  </sinks>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (long) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (long,long) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (long,long,int) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
	    <transfer>
	      <arg nr="3"/>
	      <this/>
	    </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (float) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <float/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <this/>
	    </transfer>
	  </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (float,long) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <float/>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (float,long,int) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <float/>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
	    <transfer>
	      <arg nr="3"/>
	      <this/>
	    </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (double) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <double/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <this/>
	    </transfer>
	  </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (double,long) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <double/>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (double,long,int) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <double/>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
	    <transfer>
	      <arg nr="3"/>
	      <this/>
	    </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.io.PushbackReader) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.io.PushbackReader</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.NumberFormatException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <defput>
	      <this/>
	    </defput>
	  </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.io.PushbackReader,long) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.io.PushbackReader</object>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.NumberFormatException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <defput>
	      <this/>
	    </defput>
	  </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.io.PushbackReader,long,int) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.io.PushbackReader</object>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>java.lang.NumberFormatException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <defput>
	      <this/>
	    </defput>
	  </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.math.BigInteger) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <this/>
	    </transfer>
	  </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.math.BigInteger,long) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.math.BigInteger,long,int) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.math.BigInteger</object>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
	    <transfer>
	      <arg nr="3"/>
	      <this/>
	    </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.math.BigDecimal) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.math.BigDecimal</object>
          </arg>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <this/>
	    </transfer>
	  </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (java.math.BigDecimal,long) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <object>java.math.BigDecimal</object>
          </arg>
          <arg nr="2">
            <long/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ add -->
      <method access="public" name="add" valid="no">
        <signature>
          <arg nr="1">
            <object>org.apfloat.Apfloat</object>
          </arg>
          <return>
            <object>org.apfloat.Apfloat</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ byteValue -->
      <method access="public" name="byteValue">
        <signature>
          <return>
            <byte/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ceil -->
      <method access="public" name="ceil">
        <signature>
          <return>
            <object>org.apfloat.Apint</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ compareTo -->
      <method access="public" name="compareTo">
        <signature>
          <arg nr="1">
            <object>org.apfloat.Apfloat</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ compareTo -->
      <method access="public" bridge="yes" name="compareTo">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ divide -->
      <method access="public" name="divide">
        <signature>
          <arg nr="1">
            <object>org.apfloat.Apfloat</object>
          </arg>
          <return>
            <object>org.apfloat.Apfloat</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.ArithmeticException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ doubleValue -->
      <method access="public" name="doubleValue">
        <signature>
          <return>
            <double/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ equalDigits -->
      <method access="public" name="equalDigits">
        <signature>
          <arg nr="1">
            <object>org.apfloat.Apfloat</object>
          </arg>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ equals -->
      <method access="public" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ floatValue -->
      <method access="public" name="floatValue">
        <signature>
          <return>
            <float/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ floor -->
      <method access="public" name="floor">
        <signature>
          <return>
            <object>org.apfloat.Apint</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ formatTo -->
      <method access="public" name="formatTo" valid="no">
        <signature>
          <arg nr="1">
            <object>java.util.Formatter</object>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <arg nr="4">
            <int/>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ frac -->
      <method access="public" name="frac">
        <signature>
          <return>
            <object>org.apfloat.Apfloat</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getImpl -->
      <method access="protected" name="getImpl">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <object>org.apfloat.spi.ApfloatImpl</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ hashCode -->
      <method access="public" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ imag -->
      <method access="public" name="imag">
        <signature>
          <return>
            <object>org.apfloat.Apfloat</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ intValue -->
      <method access="public" name="intValue">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isShort -->
      <method access="public" name="isShort">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ longValue -->
      <method access="public" name="longValue">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ mod -->
      <method access="public" name="mod">
        <signature>
          <arg nr="1">
            <object>org.apfloat.Apfloat</object>
          </arg>
          <return>
            <object>org.apfloat.Apfloat</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ multiply -->
      <method access="public" name="multiply">
        <signature>
          <arg nr="1">
            <object>org.apfloat.Apfloat</object>
          </arg>
          <return>
            <object>org.apfloat.Apfloat</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ negate -->
      <method access="public" name="negate">
        <signature>
          <return>
            <object>org.apfloat.Apfloat</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ negate -->
      <method access="public" bridge="yes" name="negate">
        <signature>
          <return>
            <object>org.apfloat.Apcomplex</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ precision -->
      <method access="public" name="precision">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ precision -->
      <method access="public" name="precision">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <object>org.apfloat.Apfloat</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ precision -->
      <method access="public" bridge="yes" name="precision">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <return>
            <object>org.apfloat.Apcomplex</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.IllegalArgumentException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ preferCompare -->
      <method access="public" name="preferCompare">
        <signature>
          <arg nr="1">
            <object>org.apfloat.Apfloat</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ radix -->
      <method access="public" name="radix">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ real -->
      <method access="public" name="real">
        <signature>
          <return>
            <object>org.apfloat.Apfloat</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <return/>
              <this/>
            </transfer>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <eq/>
                  <return/>
                  <this/>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ scale -->
      <method access="public" name="scale">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ shortValue -->
      <method access="public" name="shortValue">
        <signature>
          <return>
            <short/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ signum -->
      <method access="public" name="signum">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ size -->
      <method access="public" name="size">
        <signature>
          <return>
            <long/>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
	  <postconditions>
	    <post>
	      <math>
		<apply>
		  <geq/>
		  <return/>
		  <cn>0</cn>
		</apply>
	      </math>
	    </post>
	  </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ subtract -->
      <method access="public" name="subtract">
        <signature>
          <arg nr="1">
            <object>org.apfloat.Apfloat</object>
          </arg>
          <return>
            <object>org.apfloat.Apfloat</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toRadix -->
      <method access="public" name="toRadix">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>org.apfloat.Apfloat</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toRadix -->
      <method access="public" bridge="yes" name="toRadix">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>org.apfloat.Apcomplex</object>
          </return>
        </signature>
        <exceptions>
          <throws>java.lang.NumberFormatException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toString -->
      <method access="public" name="toString">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ truncate -->
      <method access="public" name="truncate">
        <signature>
          <return>
            <object>org.apfloat.Apint</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint>
	    <transfer>
	      <this/>
	      <return/>
	    </transfer>
	  </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ writeTo -->
      <method access="public" name="writeTo" valid="no">
        <signature>
          <arg nr="1">
            <object>java.io.Writer</object>
          </arg>
          <arg nr="2">
            <boolean/>
          </arg>
        </signature>
        <exceptions>
          <throws>java.io.IOException</throws>
          <throws>org.apfloat.ApfloatRuntimeException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) add -->
      <method from="org.apfloat.Apcomplex" inherited="yes" name="add">
        <signature>
          <arg nr="1">
            <object>org.apfloat.Apcomplex</object>
          </arg>
          <return>
            <object>org.apfloat.Apcomplex</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) conj -->
      <method from="org.apfloat.Apcomplex" inherited="yes" name="conj">
        <signature>
          <return>
            <object>org.apfloat.Apcomplex</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) divide -->
      <method from="org.apfloat.Apcomplex" inherited="yes" name="divide">
        <signature>
          <arg nr="1">
            <object>org.apfloat.Apcomplex</object>
          </arg>
          <return>
            <object>org.apfloat.Apcomplex</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equalDigits -->
      <method from="org.apfloat.Apcomplex" inherited="yes" name="equalDigits">
        <signature>
          <arg nr="1">
            <object>org.apfloat.Apcomplex</object>
          </arg>
          <return>
            <long/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) multiply -->
      <method from="org.apfloat.Apcomplex" inherited="yes" name="multiply">
        <signature>
          <arg nr="1">
            <object>org.apfloat.Apcomplex</object>
          </arg>
          <return>
            <object>org.apfloat.Apcomplex</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) subtract -->
      <method from="org.apfloat.Apcomplex" inherited="yes" name="subtract">
        <signature>
          <arg nr="1">
            <object>org.apfloat.Apcomplex</object>
          </arg>
          <return>
            <object>org.apfloat.Apcomplex</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) toString -->
      <method from="org.apfloat.Apcomplex" inherited="yes" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) writeTo -->
      <method from="org.apfloat.Apcomplex" inherited="yes" name="writeTo">
        <signature>
          <arg nr="1">
            <object>java.io.Writer</object>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
