<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-03-26 12:36:57"/>
  <class name="ConcurrentSuffixTree$ConcurrentSuffixTreeImpl" package="com.googlecode.concurrenttrees.suffix">
    <superclass>com.googlecode.concurrenttrees.radix.ConcurrentRadixTree</superclass>
    <interfaces>
      <implements>com.googlecode.concurrenttrees.radix.RadixTree</implements>
      <implements>com.googlecode.concurrenttrees.radix.node.util.PrettyPrintable</implements>
      <implements>java.io.Serializable</implements>
    </interfaces>
    <!-- =============================== FIELDS ===============================  -->
    <fields/>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!--  (com.googlecode.concurrenttrees.suffix.ConcurrentSuffixTree,com.googlecode.concurrenttrees.radix.node.NodeFactory) -->
      <constructor access="public" valid="no">
        <signature>
          <arg nr="1">
            <object>com.googlecode.concurrenttrees.suffix.ConcurrentSuffixTree</object>
          </arg>
          <arg nr="2">
            <object>com.googlecode.concurrenttrees.radix.node.NodeFactory</object>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ acquireWriteLock -->
      <method access="protected" name="acquireWriteLock" valid="no">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ releaseWriteLock -->
      <method access="protected" name="releaseWriteLock" valid="no">
        <signature/>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equals -->
      <method from="java.lang.Object" inherited="yes" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClosestKeys -->
      <method from="com.googlecode.concurrenttrees.radix.ConcurrentRadixTree" inherited="yes" name="getClosestKeys">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.Iterable</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getKeyValuePairsForClosestKeys -->
      <method from="com.googlecode.concurrenttrees.radix.ConcurrentRadixTree" inherited="yes" name="getKeyValuePairsForClosestKeys">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.Iterable</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~ (inherited) getKeyValuePairsForKeysStartingWith -->
      <method from="com.googlecode.concurrenttrees.radix.ConcurrentRadixTree" inherited="yes" name="getKeyValuePairsForKeysStartingWith">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.Iterable</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getKeysStartingWith -->
      <method from="com.googlecode.concurrenttrees.radix.ConcurrentRadixTree" inherited="yes" name="getKeysStartingWith">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.Iterable</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getNode -->
      <method from="com.googlecode.concurrenttrees.radix.ConcurrentRadixTree" inherited="yes" name="getNode">
        <signature>
          <return>
            <object>com.googlecode.concurrenttrees.radix.node.Node</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getValueForExactKey -->
      <method from="com.googlecode.concurrenttrees.radix.ConcurrentRadixTree" inherited="yes" name="getValueForExactKey">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getValuesForClosestKeys -->
      <method from="com.googlecode.concurrenttrees.radix.ConcurrentRadixTree" inherited="yes" name="getValuesForClosestKeys">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.Iterable</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getValuesForKeysStartingWith -->
      <method from="com.googlecode.concurrenttrees.radix.ConcurrentRadixTree" inherited="yes" name="getValuesForKeysStartingWith">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.Iterable</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.lang.Object" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) lazyTraverseDescendants -->
      <method from="com.googlecode.concurrenttrees.radix.ConcurrentRadixTree" inherited="yes" name="lazyTraverseDescendants">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <arg nr="2">
            <object>com.googlecode.concurrenttrees.radix.node.Node</object>
          </arg>
          <return>
            <object>java.lang.Iterable</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) put -->
      <method from="com.googlecode.concurrenttrees.radix.ConcurrentRadixTree" inherited="yes" name="put">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) putIfAbsent -->
      <method from="com.googlecode.concurrenttrees.radix.ConcurrentRadixTree" inherited="yes" name="putIfAbsent">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) remove -->
      <method from="com.googlecode.concurrenttrees.radix.ConcurrentRadixTree" inherited="yes" name="remove">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) size -->
      <method from="com.googlecode.concurrenttrees.radix.ConcurrentRadixTree" inherited="yes" name="size">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) toString -->
      <method from="java.lang.Object" inherited="yes" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) transformKeyForResult -->
      <method from="com.googlecode.concurrenttrees.radix.ConcurrentRadixTree" inherited="yes" name="transformKeyForResult">
        <signature>
          <arg nr="1">
            <object>java.lang.CharSequence</object>
          </arg>
          <return>
            <object>java.lang.CharSequence</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
