<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-03-25 00:00:02"/>
  <class name="Complex" package="org.apache.commons.math3.complex">
    <interfaces>
      <implements>org.apache.commons.math3.FieldElement</implements>
      <implements>java.io.Serializable</implements>
    </interfaces>
    <!-- =============================== FIELDS ===============================  -->
    <fields>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:I -->
      <field access="public" final="yes" name="I" not-null="yes" static="yes">
        <signature>
          <object>org.apache.commons.math3.complex.Complex</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:NaN -->
      <field access="public" final="yes" name="NaN" not-null="yes" static="yes">
        <signature>
          <object>org.apache.commons.math3.complex.Complex</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:INF -->
      <field access="public" final="yes" name="INF" not-null="yes" static="yes">
        <signature>
          <object>org.apache.commons.math3.complex.Complex</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:ONE -->
      <field access="public" final="yes" name="ONE" not-null="yes" static="yes">
        <signature>
          <object>org.apache.commons.math3.complex.Complex</object>
        </signature>
      </field>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ field:ZERO -->
      <field access="public" final="yes" name="ZERO" not-null="yes" static="yes">
        <signature>
          <object>org.apache.commons.math3.complex.Complex</object>
        </signature>
      </field>
    </fields>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (double) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <double/>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (double,double) -->
      <constructor access="public">
        <signature>
          <arg nr="1">
            <double/>
          </arg>
          <arg nr="2">
            <double/>
          </arg>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
            <transfer>
              <arg nr="2"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </constructor>
    </constructors>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ abs -->
      <method access="public" name="abs" valid="no">
        <signature>
          <return>
            <double/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ acos -->
      <method access="public" name="acos" valid="no">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ add -->
      <method access="public" name="add">
        <signature>
          <arg nr="1">
            <object>org.apache.commons.math3.complex.Complex</object>
          </arg>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ add -->
      <method access="public" name="add">
        <signature>
          <arg nr="1">
            <double/>
          </arg>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ add -->
      <method access="public" bridge="yes" name="add" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ asin -->
      <method access="public" name="asin" valid="no">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ atan -->
      <method access="public" name="atan" valid="no">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ conjugate -->
      <method access="public" name="conjugate" valid="no">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ cos -->
      <method access="public" name="cos" valid="no">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ cosh -->
      <method access="public" name="cosh" valid="no">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ createComplex -->
      <method access="protected" name="createComplex" valid="no">
        <signature>
          <arg nr="1">
            <double/>
          </arg>
          <arg nr="2">
            <double/>
          </arg>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ divide -->
      <method access="public" name="divide">
        <signature>
          <arg nr="1">
            <object>org.apache.commons.math3.complex.Complex</object>
          </arg>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ divide -->
      <method access="public" name="divide">
        <signature>
          <arg nr="1">
            <double/>
          </arg>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ divide -->
      <method access="public" bridge="yes" name="divide">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
          <throws>org.apache.commons.math3.exception.MathArithmeticException</throws>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
          <throws>org.apache.commons.math3.exception.MathArithmeticException</throws>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
          <throws>org.apache.commons.math3.exception.MathArithmeticException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ equals -->
      <method access="public" name="equals" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ equals -->
      <method access="public" name="equals" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>org.apache.commons.math3.complex.Complex</object>
          </arg>
          <arg nr="2">
            <object>org.apache.commons.math3.complex.Complex</object>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ equals -->
      <method access="public" name="equals" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>org.apache.commons.math3.complex.Complex</object>
          </arg>
          <arg nr="2">
            <object>org.apache.commons.math3.complex.Complex</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ equals -->
      <method access="public" name="equals" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>org.apache.commons.math3.complex.Complex</object>
          </arg>
          <arg nr="2">
            <object>org.apache.commons.math3.complex.Complex</object>
          </arg>
          <arg nr="3">
            <double/>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ equalsWithRelativeTolerance -->
      <method access="public" name="equalsWithRelativeTolerance" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <object>org.apache.commons.math3.complex.Complex</object>
          </arg>
          <arg nr="2">
            <object>org.apache.commons.math3.complex.Complex</object>
          </arg>
          <arg nr="3">
            <double/>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ exp -->
      <method access="public" name="exp" valid="no">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getArgument -->
      <method access="public" name="getArgument" valid="no">
        <signature>
          <return>
            <double/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getField -->
      <method access="public" name="getField">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.ComplexField</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getField -->
      <method access="public" bridge="yes" name="getField" valid="no">
        <signature>
          <return>
            <object>org.apache.commons.math3.Field</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getImaginary -->
      <method access="public" name="getImaginary">
        <signature>
          <return>
            <double/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <return/>
              <this/>
            </transfer>
            <transfer>
              <this field="imaginary"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <eq/>
                  <return/>
                  <this/>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ getReal -->
      <method access="public" name="getReal">
        <signature>
          <return>
            <double/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <return/>
              <this/>
            </transfer>
            <transfer>
              <this field="real"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <eq/>
                  <return/>
                  <this/>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ hashCode -->
      <method access="public" name="hashCode" valid="no">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isInfinite -->
      <method access="public" name="isInfinite">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <return/>
              <this/>
            </transfer>
            <transfer>
              <this field="isInfinite"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <eq/>
                  <return/>
                  <this/>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ isNaN -->
      <method access="public" name="isNaN">
        <signature>
          <return>
            <boolean/>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <return/>
              <this/>
            </transfer>
            <transfer>
              <this field="isNaN"/>
              <return/>
            </transfer>
          </taint>
          <postconditions>
            <post>
              <math>
                <apply>
                  <eq/>
                  <return/>
                  <this/>
                </apply>
              </math>
            </post>
          </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ log -->
      <method access="public" name="log" valid="no">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ multiply -->
      <method access="public" name="multiply">
        <signature>
          <arg nr="1">
            <object>org.apache.commons.math3.complex.Complex</object>
          </arg>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ multiply -->
      <method access="public" name="multiply">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ multiply -->
      <method access="public" name="multiply">
        <signature>
          <arg nr="1">
            <double/>
          </arg>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ multiply -->
      <method access="public" bridge="yes" name="multiply">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ multiply -->
      <method access="public" bridge="yes" name="multiply">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ negate -->
      <method access="public" name="negate">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ negate -->
      <method access="public" bridge="yes" name="negate">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ nthRoot -->
      <method access="public" name="nthRoot" valid="no">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <return>
            <object>java.util.List</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apache.commons.math3.exception.NotPositiveException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pow -->
      <method access="public" name="pow">
        <signature>
          <arg nr="1">
            <object>org.apache.commons.math3.complex.Complex</object>
          </arg>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
        </exceptions>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pow -->
      <method access="public" name="pow">
        <signature>
          <arg nr="1">
            <double/>
          </arg>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint>
            <transfer>
              <this/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <return/>
            </transfer>
            <transfer>
              <arg nr="1"/>
              <this/>
            </transfer>
          </taint>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ readResolve -->
      <method access="protected" final="yes" name="readResolve" valid="no">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ reciprocal -->
      <method access="public" name="reciprocal" valid="no">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ reciprocal -->
      <method access="public" bridge="yes" name="reciprocal" valid="no">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apache.commons.math3.exception.MathArithmeticException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sin -->
      <method access="public" name="sin" valid="no">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sinh -->
      <method access="public" name="sinh" valid="no">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sqrt -->
      <method access="public" name="sqrt" valid="no">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sqrt1z -->
      <method access="public" name="sqrt1z" valid="no">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ subtract -->
      <method access="public" name="subtract" valid="no">
        <signature>
          <arg nr="1">
            <object>org.apache.commons.math3.complex.Complex</object>
          </arg>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ subtract -->
      <method access="public" name="subtract" valid="no">
        <signature>
          <arg nr="1">
            <double/>
          </arg>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ subtract -->
      <method access="public" bridge="yes" name="subtract" valid="no">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
          <throws>org.apache.commons.math3.exception.NullArgumentException</throws>
        </exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ tan -->
      <method access="public" name="tan" valid="no">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ tanh -->
      <method access="public" name="tanh" valid="no">
        <signature>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ toString -->
      <method access="public" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ valueOf -->
      <method access="public" name="valueOf" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <double/>
          </arg>
          <arg nr="2">
            <double/>
          </arg>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ valueOf -->
      <method access="public" name="valueOf" static="yes" valid="no">
        <signature>
          <arg nr="1">
            <double/>
          </arg>
          <return>
            <object>org.apache.commons.math3.complex.Complex</object>
          </return>
        </signature>
        <exceptions/>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
