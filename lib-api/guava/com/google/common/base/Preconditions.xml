<?xml version="1.0" encoding="UTF-8"?>
<codehawk-java-analyzer>
  <header info="class" time="2020-03-26 14:03:58"/>
  <class final="yes" name="Preconditions" package="com.google.common.base">
    <interfaces/>
    <!-- =============================== FIELDS ===============================  -->
    <fields/>
    <!-- ============================ CONSTRUCTORS ============================  -->
    <constructors/>
    <!-- ============================== METHODS ==============================  -->
    <methods>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkArgument -->
      <method access="public" name="checkArgument" static="yes">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions>
	  <c-throws>
	    <safety-condition>
	      <math>
		<apply>
		  <eq/>
		  <arg nr="1"/>
		  <true/>
		</apply>
	      </math>
	    </safety-condition>
	    <exn>java.lang.IllegalArgumentException</exn>
	  </c-throws>
	</exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkArgument -->
      <method access="public" name="checkArgument" static="yes">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
        </signature>
        <exceptions>
	  <c-throws>
	    <safety-condition>
	      <math>
		<apply>
		  <eq/>
		  <arg nr="1"/>
		  <true/>
		</apply>
	      </math>
	    </safety-condition>
	    <exn>java.lang.IllegalArgumentException</exn>
	  </c-throws>
	</exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkArgument -->
      <method access="public" name="checkArgument" static="yes">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <array>
              <object>java.lang.Object</object>
            </array>
          </arg>
        </signature>
        <exceptions>
	  <c-throws>
	    <safety-condition>
	      <math>
		<apply>
		  <eq/>
		  <arg nr="1"/>
		  <true/>
		</apply>
	      </math>
	    </safety-condition>
	    <exn>java.lang.IllegalArgumentException</exn>
	  </c-throws>
	</exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkElementIndex -->
      <method access="public" name="checkElementIndex" static="yes">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
	  <c-throws>
	    <safety-condition>
	      <math>
		<apply>
		  <lt/>
		  <arg nr="1"/>
		  <arg nr="2"/>
		</apply>
	      </math>
	    </safety-condition>
	    <safety-condition>
	      <math>
		<apply>
		  <geq/>
		  <arg nr="1"/>
		  <cn>0</cn>
		</apply>
	      </math>
	    </safety-condition>
	    <exn>java.lang.IndexOutOfBoundsException</exn>
	  </c-throws>
	  <c-throws>
	    <safety-condition>
	      <math>
		<apply>
		  <geq/>
		  <arg nr="2"/>
		  <cn>0</cn>
		</apply>
	      </math>
	    </safety-condition>
	    <exn>java.lang.IllegalArgumentException</exn>
	  </c-throws>
	</exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
	  <postconditions>
	    <post>
	      <math>
		<apply>
		  <eq/>
		  <return/>
		  <arg nr="1"/>
		</apply>
	      </math>
	    </post>
	  </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkElementIndex -->
      <method access="public" name="checkElementIndex" static="yes">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <object>java.lang.String</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
	  <c-throws>
	    <safety-condition>
	      <math>
		<apply>
		  <lt/>
		  <arg nr="1"/>
		  <arg nr="2"/>
		</apply>
	      </math>
	    </safety-condition>
	    <safety-condition>
	      <math>
		<apply>
		  <geq/>
		  <arg nr="1"/>
		  <cn>0</cn>
		</apply>
	      </math>
	    </safety-condition>
	    <exn>java.lang.IndexOutOfBoundsException</exn>
	  </c-throws>
	  <c-throws>
	    <safety-condition>
	      <math>
		<apply>
		  <geq/>
		  <arg nr="2"/>
		  <cn>0</cn>
		</apply>
	      </math>
	    </safety-condition>
	    <exn>java.lang.IllegalArgumentException</exn>
	  </c-throws>
	</exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
	  <postconditions>
	    <post>
	      <math>
		<apply>
		  <eq/>
		  <return/>
		  <arg nr="1"/>
		</apply>
	      </math>
	    </post>
	  </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkNotNull -->
      <method access="public" name="checkNotNull" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
	  <c-throws>
	    <cnp arg="1"/>
	  </c-throws>
	</exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
	  <postconditions>
	    <post>
	      <math>
		<apply>
		  <eq/>
		  <arg nr="1"/>
		  <return/>
		</apply>
	      </math>
	    </post>
	  </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkNotNull -->
      <method access="public" name="checkNotNull" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
	  <c-throws>
	    <cnp arg="1"/>
	  </c-throws>
	</exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
	  <postconditions>
	    <post>
	      <math>
		<apply>
		  <eq/>
		  <arg nr="1"/>
		  <return/>
		</apply>
	      </math>
	    </post>
	  </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkNotNull -->
      <method access="public" name="checkNotNull" static="yes">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <array>
              <object>java.lang.Object</object>
            </array>
          </arg>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
        <exceptions>
	  <c-throws>
	    <cnp arg="1"/>
	  </c-throws>
	</exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
	  <postconditions>
	    <post>
	      <math>
		<apply>
		  <eq/>
		  <arg nr="1"/>
		  <return/>
		</apply>
	      </math>
	    </post>
	  </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkPositionIndex -->
      <method access="public" name="checkPositionIndex" static="yes">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
	  <c-throws>
	    <safety-condition>
	      <math>
		<apply>
		  <lt/>
		  <arg nr="1"/>
		  <arg nr="2"/>
		</apply>
	      </math>
	    </safety-condition>
	    <safety-condition>
	      <math>
		<apply>
		  <geq/>
		  <arg nr="1"/>
		  <cn>0</cn>
		</apply>
	      </math>
	    </safety-condition>
	    <exn>java.lang.IndexOutOfBoundsException</exn>
	  </c-throws>
	  <c-throws>
	    <safety-condition>
	      <math>
		<apply>
		  <geq/>
		  <arg nr="2"/>
		  <cn>0</cn>
		</apply>
	      </math>
	    </safety-condition>
	    <exn>java.lang.IllegalArgumentException</exn>
	  </c-throws>
	</exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
	  <postconditions>
	    <post>
	      <math>
		<apply>
		  <eq/>
		  <return/>
		  <arg nr="1"/>
		</apply>
	      </math>
	    </post>
	  </postconditions>
	</summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkPositionIndex -->
      <method access="public" name="checkPositionIndex" static="yes">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <object>java.lang.String</object>
          </arg>
          <return>
            <int/>
          </return>
        </signature>
        <exceptions>
	  <c-throws>
	    <safety-condition>
	      <math>
		<apply>
		  <lt/>
		  <arg nr="1"/>
		  <arg nr="2"/>
		</apply>
	      </math>
	    </safety-condition>
	    <safety-condition>
	      <math>
		<apply>
		  <geq/>
		  <arg nr="1"/>
		  <cn>0</cn>
		</apply>
	      </math>
	    </safety-condition>
	    <exn>java.lang.IndexOutOfBoundsException</exn>
	  </c-throws>
	  <c-throws>
	    <safety-condition>
	      <math>
		<apply>
		  <geq/>
		  <arg nr="2"/>
		  <cn>0</cn>
		</apply>
	      </math>
	    </safety-condition>
	    <exn>java.lang.IllegalArgumentException</exn>
	  </c-throws>
	</exceptions>
        <summary>
          <taint>
	    <transfer>
	      <arg nr="1"/>
	      <return/>
	    </transfer>
	  </taint>
	  <postconditions>
	    <post>
	      <math>
		<apply>
		  <eq/>
		  <return/>
		  <arg nr="1"/>
		</apply>
	      </math>
	    </post>
	  </postconditions>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkPositionIndexes -->
      <method access="public" name="checkPositionIndexes" static="yes">
        <signature>
          <arg nr="1">
            <int/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
          <arg nr="3">
            <int/>
          </arg>
        </signature>
        <exceptions>
	  <c-throws>
	    <safety-condition>
	      <math>
		<apply>
		  <lt/>
		  <arg nr="1"/>
		  <arg nr="3"/>
		</apply>
	      </math>
	    </safety-condition>
	    <safety-condition>
	      <math>
		<apply>
		  <geq/>
		  <arg nr="2"/>
		  <cn>0</cn>
		</apply>
	      </math>
	    </safety-condition>
	    <safety-condition>
	      <math>
		<apply>
		  <lt/>
		  <arg nr="2"/>
		  <arg nr="3"/>
		</apply>
	      </math>
	    </safety-condition>
	    <safety-condition>
	      <math>
		<apply>
		  <geq/>
		  <arg nr="1"/>
		  <cn>0</cn>
		</apply>
	      </math>
	    </safety-condition>
	    <safety-condition>
	      <math>
		<apply>
		  <geq/>
		  <arg nr="2"/>
		  <cn>0</cn>
		</apply>
	      </math>
	    </safety-condition>
	    <safety-condition>
	      <math>
		<apply>
		  <leq/>
		  <arg nr="1"/>
		  <arg nr="2"/>
		</apply>
	      </math>
	    </safety-condition>
	    <exn>java.lang.IndexOutOfBoundsException</exn>
	  </c-throws>
	  <c-throws>
	    <safety-condition>
	      <math>
		<apply>
		  <geq/>
		  <arg nr="3"/>
		  <cn>0</cn>
		</apply>
	      </math>
	    </safety-condition>
	    <exn>java.lang.IllegalArgumentException</exn>
	  </c-throws>
	</exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkState -->
      <method access="public" name="checkState" static="yes">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
        </signature>
        <exceptions>
	  <c-throws>
	    <safety-condition>
	      <math>
		<apply>
		  <eq/>
		  <arg nr="1"/>
		  <true/>
		</apply>
	      </math>
	    </safety-condition>
	    <exn>java.lang.IllegalArgumentException</exn>
	  </c-throws>
	</exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkState -->
      <method access="public" name="checkState" static="yes">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
          <arg nr="2">
            <object>java.lang.Object</object>
          </arg>
        </signature>
        <exceptions>
	  <c-throws>
	    <safety-condition>
	      <math>
		<apply>
		  <eq/>
		  <arg nr="1"/>
		  <true/>
		</apply>
	      </math>
	    </safety-condition>
	    <exn>java.lang.IllegalArgumentException</exn>
	  </c-throws>
	</exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ checkState -->
      <method access="public" name="checkState" static="yes">
        <signature>
          <arg nr="1">
            <boolean/>
          </arg>
          <arg nr="2">
            <object>java.lang.String</object>
          </arg>
          <arg nr="3">
            <array>
              <object>java.lang.Object</object>
            </array>
          </arg>
        </signature>
        <exceptions>
	  <c-throws>
	    <safety-condition>
	      <math>
		<apply>
		  <eq/>
		  <arg nr="1"/>
		  <true/>
		</apply>
	      </math>
	    </safety-condition>
	    <exn>java.lang.IllegalArgumentException</exn>
	  </c-throws>
	</exceptions>
        <summary>
          <taint/>
        </summary>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) clone -->
      <method from="java.lang.Object" inherited="yes" name="clone">
        <signature>
          <return>
            <object>java.lang.Object</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) equals -->
      <method from="java.lang.Object" inherited="yes" name="equals">
        <signature>
          <arg nr="1">
            <object>java.lang.Object</object>
          </arg>
          <return>
            <boolean/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) finalize -->
      <method from="java.lang.Object" inherited="yes" name="finalize">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) getClass -->
      <method from="java.lang.Object" inherited="yes" name="getClass">
        <signature>
          <return>
            <object>java.lang.Class</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) hashCode -->
      <method from="java.lang.Object" inherited="yes" name="hashCode">
        <signature>
          <return>
            <int/>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notify -->
      <method from="java.lang.Object" inherited="yes" name="notify">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) notifyAll -->
      <method from="java.lang.Object" inherited="yes" name="notifyAll">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) toString -->
      <method from="java.lang.Object" inherited="yes" name="toString">
        <signature>
          <return>
            <object>java.lang.String</object>
          </return>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature/>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
          <arg nr="2">
            <int/>
          </arg>
        </signature>
      </method>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ (inherited) wait -->
      <method from="java.lang.Object" inherited="yes" name="wait">
        <signature>
          <arg nr="1">
            <long/>
          </arg>
        </signature>
      </method>
    </methods>
  </class>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-java-analyzer>
